[{"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GlobalState.js":"1","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/services/UserService.js":"2","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/calendar-admin/WeekViewCell.js":"3","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/services/api.js":"4","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Menu.js":"5","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/BookingTable.js":"6","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/PersonsBox.js":"7","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/Corporates.js":"8","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/DateFormatter.js":"9","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/services/PDFService.js":"10","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/Title.js":"11","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/Title.js":"12","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/Title.js":"13","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/BookingDialog.js":"14","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/DateFormatter.js":"15","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/DayView.js":"16","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/Chart.js":"17","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/BookingDialog.js":"18","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/calendar-admin/DayViewCell.js":"19","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/calendar-admin/MonthViewCell.js":"20","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/calendar-admin/DayViewCell.js":"21","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/NewBookingDialog.js":"22","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/index.js":"23","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/MenuList.js":"24","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/services/api.js":"25","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/CopyRight.js":"26","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/services/BookService.js":"27","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/calendar-admin/WeekView.js":"28","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/FindByRef.js":"29","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/BookingTable.js":"30","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/BookingTable.js":"31","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/BookingView.js":"32","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/Corporates.js":"33","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/WeekView.js":"34","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/MonthViewCell.js":"35","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/TimeStampDialog.js":"36","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/CurrentVisits.js":"37","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/PriceCalculator.js":"38","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/CurrentVisits.js":"39","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/BookingDialog.js":"40","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/serviceWorker.js":"41","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/calendar-admin/CalendarView.js":"42","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/BookingView.js":"43","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/services/api.js":"44","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/InvoiceDialog.js":"45","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/calendar-admin/WeekViewCell.js":"46","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/CurrentVisits.js":"47","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/Corporates.js":"48","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/BookingTable.js":"49","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/UnmatchedRecords.js":"50","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/EditOVBookingDialog.js":"51","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/services/BookService.js":"52","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/PriceCalculator.js":"53","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/Chart.js":"54","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/PayDialog.js":"55","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/DayViewCell.js":"56","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/services/PDFService.js":"57","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/NewBookingDialog.js":"58"},{"size":113,"mtime":1711538211142,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":1711538211165,"results":"61","hashOfConfig":"60"},{"size":6222,"mtime":1711538211139,"results":"62","hashOfConfig":"60"},{"size":238,"mtime":1711538211139,"results":"63","hashOfConfig":"60"},{"size":4271,"mtime":1711538211147,"results":"64","hashOfConfig":"60"},{"size":34614,"mtime":1711538211147,"results":"65","hashOfConfig":"60"},{"size":33056,"mtime":1711538211137,"results":"66","hashOfConfig":"60"},{"size":48,"mtime":1711538211140,"results":"67","hashOfConfig":"60"},{"size":747,"mtime":1711538211154,"results":"68","hashOfConfig":"60"},{"size":1245,"mtime":1711538211157,"results":"69","hashOfConfig":"60"},{"size":342,"mtime":1711538211138,"results":"70","hashOfConfig":"60"},{"size":342,"mtime":1711538211141,"results":"71","hashOfConfig":"60"},{"size":342,"mtime":1711538211160,"results":"72","hashOfConfig":"60"},{"size":43268,"mtime":1711538211147,"results":"73","hashOfConfig":"60"},{"size":838,"mtime":1711538211148,"results":"74","hashOfConfig":"60"},{"size":3582,"mtime":1711538211155,"results":"75","hashOfConfig":"60"},{"size":3220,"mtime":1711538211143,"results":"76","hashOfConfig":"60"},{"size":60541,"mtime":1711538211139,"results":"77","hashOfConfig":"60"},{"size":8672,"mtime":1711538211145,"results":"78","hashOfConfig":"60"},{"size":8113,"mtime":1711538211141,"results":"79","hashOfConfig":"60"},{"size":9528,"mtime":1711538211160,"results":"80","hashOfConfig":"60"},{"size":18806,"mtime":1711538211159,"results":"81","hashOfConfig":"60"},{"size":152,"mtime":1711538211164,"results":"82","hashOfConfig":"60"},{"size":11668,"mtime":1711538211147,"results":"83","hashOfConfig":"60"},{"size":192,"mtime":1711538211165,"results":"84","hashOfConfig":"60"},{"size":402,"mtime":1711538211135,"results":"85","hashOfConfig":"60"},{"size":4967,"mtime":1711538211139,"results":"86","hashOfConfig":"60"},{"size":4128,"mtime":1711538211138,"results":"87","hashOfConfig":"60"},{"size":7820,"mtime":1711538211140,"results":"88","hashOfConfig":"60"},{"size":37960,"mtime":1711538211140,"results":"89","hashOfConfig":"60"},{"size":42814,"mtime":1711538211153,"results":"90","hashOfConfig":"60"},{"size":3714,"mtime":1711538211140,"results":"91","hashOfConfig":"60"},{"size":48,"mtime":1711538211153,"results":"92","hashOfConfig":"60"},{"size":4285,"mtime":1711538211156,"results":"93","hashOfConfig":"60"},{"size":7957,"mtime":1711538211156,"results":"94","hashOfConfig":"60"},{"size":10442,"mtime":1711538211155,"results":"95","hashOfConfig":"60"},{"size":5885,"mtime":1711538211144,"results":"96","hashOfConfig":"60"},{"size":578,"mtime":1711538211144,"results":"97","hashOfConfig":"60"},{"size":5808,"mtime":1711538211140,"results":"98","hashOfConfig":"60"},{"size":61742,"mtime":1711538211158,"results":"99","hashOfConfig":"60"},{"size":4969,"mtime":1711538211164,"results":"100","hashOfConfig":"60"},{"size":13490,"mtime":1711538211138,"results":"101","hashOfConfig":"60"},{"size":3714,"mtime":1711538211159,"results":"102","hashOfConfig":"60"},{"size":238,"mtime":1711538211153,"results":"103","hashOfConfig":"60"},{"size":22638,"mtime":1711538211146,"results":"104","hashOfConfig":"60"},{"size":6224,"mtime":1711538211161,"results":"105","hashOfConfig":"60"},{"size":5473,"mtime":1711538211159,"results":"106","hashOfConfig":"60"},{"size":48,"mtime":1711538211137,"results":"107","hashOfConfig":"60"},{"size":37960,"mtime":1711538211158,"results":"108","hashOfConfig":"60"},{"size":38993,"mtime":1711538211155,"results":"109","hashOfConfig":"60"},{"size":29416,"mtime":1711538211148,"results":"110","hashOfConfig":"60"},{"size":4587,"mtime":1711538211146,"results":"111","hashOfConfig":"60"},{"size":578,"mtime":1711538211154,"results":"112","hashOfConfig":"60"},{"size":3220,"mtime":1711538211153,"results":"113","hashOfConfig":"60"},{"size":13229,"mtime":1711538211144,"results":"114","hashOfConfig":"60"},{"size":8586,"mtime":1711538211155,"results":"115","hashOfConfig":"60"},{"size":313,"mtime":1711538211142,"results":"116","hashOfConfig":"60"},{"size":13841,"mtime":1711538211140,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y5yhdn",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"149"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"149"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GlobalState.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/services/UserService.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/calendar-admin/WeekViewCell.js",["240","241"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/services/api.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Menu.js",["242","243","244","245","246","247","248","249","250","251"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/BookingTable.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React, {useEffect, useRef, useState} from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BookService from './services/BookService';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogContent, DialogTitle, Divider, FormControl, FormControlLabel, Grid, Icon, InputLabel, LinearProgress, Link, makeStyles, MenuItem, Paper, Select, SvgIcon, Switch, TextField, Tooltip } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GlobalState from '../GlobalState';\nimport { getMenuIndex } from '../MenuList';\nimport {FormatDateFromString, FormatDateFromStringShortYear} from './DateFormatter';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport BookingDialog from './BookingDialog';\n\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport HistoryIcon from '@material-ui/icons/History';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileExcel } from \"@fortawesome/free-solid-svg-icons\";\nimport Draggable from 'react-draggable';\n\nimport * as dateformat from 'dateformat';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\n\n\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport PriceCalculator from './PriceCalculator';\nimport { corporates } from './Corporates';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(1),\n\n  },\n  \n  refreshButton:{\n    marginLeft: theme.spacing(2),\n  },\n\n  checkIcon:{\n    color: \"green\"\n  },\n\n  closeIcon:{\n    color: \"red\"\n  },\n\n  RefLink: {\n    cursor: \"pointer\"\n  },\n\n  BookedLabel:{\n    backgroundColor: \"#606060\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PatientAttendedLabel:{\n    backgroundColor: \"#0066aa\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  SampleTakenLabel:{\n    backgroundColor: \"#0066cc\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  ReportCertSentLabel:{\n    backgroundColor: \"#009900\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  PositiveLabel:{\n    backgroundColor: \"red\",\n    color: \"#fff\",\n    width: \"70px\",\n    textAlign: \"center\",\n  },\n\n  HideNowRows: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    width: \"600px\",\n    height: \"300px\",\n    backgroundColor : \"#fafafa\",\n    color : \"#111\",\n    zIndex: \"1000\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\"\n  },\n\n  ExportToExcelButton:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n   \n  },\n\n  ExportToExcelButtonInline:\n  {\n    // marginBottom : \"20px\",\n    color : \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration : \"none !important\", \n    cursor: \"pointer\",\n    padding: \"10px\"\n   \n  },\n\n  table: {\n    width: \"100%\",\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n},\n\nth: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    fontcolor: \"#555\",\n    fontWeight: \"400\",\n    fontSize: \"15px\",\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    width: \"14%\",\n    paddingLeft: \"5px\",\n},\n\ntd: {\n    border: \"1px solid #ddd\",\n    borderCollapse: \"collapse\",\n    verticalAlign: \"middle\",\n    paddingLeft: \"5px\",\n},\n\ntopSelect: {\n  margin: theme.spacing(1),\n  minWidth: 80,\n},\n\nnotifyIcon:{\n  width: \"16px\",\n  height: \"16px\",\n  borderRadius: \"50%\",\n  backgroundColor : \"rgb(220, 0, 78)\",\n  marginLeft: \"10px\"\n}\n\n}));\n\nconst getTableTitle = (str) =>{\n\n  if (str === 'today')\n  {\n    return `Today's Bookings`;\n  }else if (str === 'old')\n  {\n    return `Old Bookings`;\n  }else if (str === 'future')\n  {\n    return `Future Bookings`;\n  }else if (str === 'recent')\n  {\n    return `Recent Bookings`;\n  }else if (str === 'live')\n  {\n    return `Live Bookings`;\n  }else if (str === 'completed')\n  {\n    return `Completed Bookings`;\n  }else if (str === 'positive')\n  {\n    return `Positive Results`;\n  }else if (str === 'deleted')\n  {\n    return `Archived Records`;\n  }else if (str === 'late')\n  {\n    return `40 Hours Late`;\n  }\n  \n  else\n  {\n    return `All Bookings`;\n  }\n\n}\n\nconst getTableIcon = (str) =>{\n\n  if (str === 'today')\n  {\n    return <NewReleasesIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'old')\n  {\n    return <HistoryIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'future')\n  {\n    return <TimelineIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'recent')\n  {\n    return <AutorenewIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'live')\n  {\n    return <LiveTvIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'completed')\n  {\n    return  <PlaylistAddCheckIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'positive')\n  {\n    return <AddCircleOutlineIcon style={{fontSize:\"2.2rem\"}} />\n  }else if (str === 'deleted')\n  {\n    return <DeleteIcon style={{fontSize:\"2.2rem\"}} />;\n  }else if (str === 'late')\n  {\n    return <HourglassEmptyIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n  \n  else\n  {\n    return <DescriptionIcon style={{fontSize:\"2.2rem\"}} />;\n  }\n\n}\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingTable(props) {\n  \n  const classes = useStyles();\n\n  const [topCount, setTopCount] = React.useState(25)\n  const topCountChanged = (event) =>\n  {\n    setTopCount(event.target.value)\n    loadData(event.target.value)\n  }\n  \n\n  const [openDialogExcel, setOpenDialogExcel] = useState(false);\n  const handleCloseDialogExcel = () =>\n  {\n    setCorporate(corporates[0]);\n    setJustCorporate(false);\n    setOpenDialogExcel(false);\n  }\n\n\n  const [fromDate, setFromDate] = React.useState(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ));\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n    setFromDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [untilDate, setUntilDate] = React.useState(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ));\n  const handleUntilDateChange = (date) => {\n    setUntilDate(date);\n    seUntilDateStr(dateformat(date,'yyyy-mm-dd'));\n  };\n\n  const [fromDateStr, setFromDateStr] = useState(dateformat(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n  const [untilDateStr, seUntilDateStr] = useState(dateformat(new Date(new Date().getTime() - 1 * 24 * 60 * 60 * 1000 ), 'yyyy-mm-dd'));\n\n  const [justCorporate, setJustCorporate] = useState(false);\n\n  const[chkDate, setChkDate] = useState(true);\n  const[chkForename, setChkForename] = useState(true);\n  const[chkSurname, setChkSurname] = useState(true);\n  const[chkDOB, setChkDOB] = useState(true);\n  const[chkEmail, setChkEmail] = useState(true);\n  const[chkTel, setChkTel] = useState(true);\n  const[chkCertificate, setChkCertidicate] = useState(true);\n  const[chkAntiBodyTest, setChkAntiBodyTest] = useState(true);\n  const[chkextRef, setChkExtRef] = useState(true);\n  const[chkPrice, setChkPrice] = useState(true);\n\n  const justCorporateChanged = (event) =>\n  {\n    setJustCorporate(event.target.checked);\n  }\n  \n\n  const chkDateChanged = (event) =>\n  {\n    setChkDate(event.target.checked);\n  }\n\n  const chkForenameChanged = (event) =>\n  {\n    setChkForename(event.target.checked);\n  }\n\n  const chkSurnameChanged = (event) =>\n  {\n    setChkSurname(event.target.checked);\n  }\n\n  const chkDOBChanged = (event) =>\n  {\n    setChkDOB(event.target.checked);\n  }\n\n  const chkEmailChanged = (event) =>\n  {\n    setChkEmail(event.target.checked);\n  }\n\n  const chkTelChanged = (event) =>\n  {\n    setChkTel(event.target.checked);\n  }\n\n  const chkCertificateChanged = (event) =>\n  {\n    setChkCertidicate(event.target.checked);\n  }\n\n  const chkAntiBodyTestChanged = (event) =>\n  {\n    setChkAntiBodyTest(event.target.checked);\n  }\n\n  const chkextRefChanged = (event) =>\n  {\n    setChkExtRef(event.target.checked);\n  }\n\n  const chkPriceChanged = (event) =>\n  {\n    setChkPrice(event.target.checked);\n  }\n\n\n\n  var columns = [];\n\n  if (props.date === 'recent')\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n\n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n      {\n        field: \"timeStamp\",\n        headerName: \"TimeStamp\",\n        width: 200,\n        valueFormatter: (params) => {\n          return formatTimeStamp(params.value);\n        },\n      },\n\n      {\n        field: \"bookingDate\",\n        headerName: \"B Date\",\n        width: 110,\n        valueFormatter: (params) => {\n          return FormatDateFromString(params.value);\n        },\n      },\n      {\n        field: \"bookingTimeNormalized\",\n        headerName: \"B Time\",\n        width: 200,\n        valueGetter: (params) => {\n          return params.getValue(\"bookingTime\");\n        },\n      },\n      { field: \"fullname\", headerName: \"Fullname\", width: 250 },\n      { field: \"email\", headerName: \"Email\", width: 200 },\n      { field: \"phone\", headerName: \"Telephone\", width: 150 },\n      {\n        field: \"faceToFaceConsultation\",\n        headerName: \"Consultation\",\n        width: 250,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span> Face to Face </span>\n              )}\n              {params.getValue(\"faceToFaceConsultation\") && (\n                <span style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}>\n                  {\" \"}\n                  -{\" \"}\n                </span>\n              )}\n              {params.getValue(\"telephoneConsultation\") && (\n                <span> Telephone </span>\n              )}\n            </React.Fragment>\n          );\n        },\n      },\n    ];\n\n  }\n  else\n  {\n    columns = [\n      // { field: 'id', headerName: '#', width: 70 },\n  \n      {\n        field: \"_id\",\n        headerName: \" \",\n        width: 120,\n        renderCell: (params) => {\n          return (\n            <React.Fragment>\n              <IconButton\n                color=\"primary\"\n                onClick={(event) => openDetailsDialog(event, params.value)}\n              >\n                <SearchIcon />\n              </IconButton>\n\n              <span\n                style={{\n                  color: \"#058700\",\n                  fontWeight: \"500\",\n                  fontSize: \"0.8rem\",\n                }}\n              >\n                {params.getValue(\"questions\") && \"Self-Test\"}\n              </span>\n            </React.Fragment>\n          );\n        },\n      },\n\n\n\n\n  \n      { field: 'bookingDate', headerName: 'B Date', width: 110, valueFormatter: (params) => { \n              return FormatDateFromString(params.value);\n          }\n       },\n      { field: 'bookingTimeNormalized', headerName: 'B Time', width: 200 , valueGetter: (params) => {\n        return params.getValue('bookingTime');\n      }},\n      { field: 'fullname', headerName: 'Fullname', width: 250 },\n      { field: 'email', headerName: 'Email', width: 200 },\n      { field: 'phone', headerName: 'Telephone', width: 150 },\n      { field: 'faceToFaceConsultation', headerName: 'Consultation', width: 250 , renderCell: (params) => {\n        return (\n          <React.Fragment>\n              {params.getValue('faceToFaceConsultation') && <span> Face to Face </span>}\n              {params.getValue('faceToFaceConsultation') && <span style={{paddingLeft:\"5px\", paddingRight:\"5px\"}}> - </span>}\n              {params.getValue('telephoneConsultation') && <span> Telephone </span>}\n          </React.Fragment>\n        )\n      }},\n    \n    ];\n  \n\n  }\n\n\n\n  const [state, setState] = React.useContext(GlobalState);  \n\n  const [data, setData] = React.useState({bookings: [] , cachedBookings: [], isFetching : true});\n\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n  const [seeDetailsDialogOpen, setSeeDetailsDialogOpen] = React.useState(false);\n\n  const [corporate, setCorporate] = useState(corporates[0]);\n  const corporateChanged = (event) =>\n  {\n    setCorporate(event.target.value);\n  }\n  \n\n  const [filter,setFilter] = React.useState('');\n\n\n  const lastPromise = useRef();\n\n  const formatTimeStamp = (timeStamp) =>\n  {\n    const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n    const timeStampStr = dateformat(timeStamp, 'yyyy-mm-dd');\n    if (todayStr === timeStampStr)\n    {\n      return dateformat(timeStamp, \"'Today', h:MM:ss TT\");\n    }\n    else\n    {\n       return dateformat(timeStamp, \"mmm dS, h:MM:ss TT\");\n    }\n  }\n\n  const loadData = (top) =>\n  {\n    var api = BookService.getAllBookings;\n    if (props.date === 'today')\n    {\n      api = BookService.getTodayBookings;\n    }else if (props.date === 'old')\n    {\n      api = BookService.getOldBookings;\n    }else if (props.date === 'future')\n    {\n      api = BookService.getFutureBookings;\n    }else if (props.date === 'recent')\n    {\n      api = BookService.getRecentBookingsAll;\n    }\n    else if (props.date === 'deleted')\n    {\n      api = BookService.getDeletedBookings;\n    }\n     \n    setData({bookings: [], cachedBookings: [], isFetching: true});\n   \n    // console.log(props)\n\n    const currentPromise = api(top).then( (res) =>{\n      // console.log(res)\n      for (var i=0; i < res.data.length; i++)\n      {\n        res.data[i] = {...res.data[i], id : i + 1}\n      }  \n      setData({bookings: [...res.data], cachedBookings: [...res.data], isFetching: false});\n      // return res.data;\n    }).catch(err => {\n      console.error(err)\n    })\n\n    // lastPromise.current = currentPromise;\n\n    // currentPromise.then(\n    //   result => {\n    //     if (currentPromise === lastPromise.current) {\n    //       setData({bookings: [...result], cachedBookings: [...result], isFetching: false});\n    //       setPage(1);\n    //     }\n    //   },\n    //   e => {\n    //     if (currentPromise === lastPromise.current) {\n    //         console.error(e);\n    //         setData({bookings: data.bookings, cachedBookings: data.cachedBookings, isFetching: false});\n    //     }\n    //   });\n\n  }\n\n  useEffect( () => {\n            setTopCount(25)\n            loadData(25)\n        },\n        [props.date]);\n\n\n\n\n  useEffect( () => {\n\n        if (filter && filter.trim().length > 0)\n        {\n          var filteredData = data.cachedBookings.filter( (element) => \n\n             (element.fullname?.toLowerCase().indexOf(filter.toLowerCase()) >= 0)\n              \n          );\n  \n  \n          setData({bookings: [...filteredData], cachedBookings: data.cachedBookings, isFetching: false});\n        }else\n        {\n          setData({bookings: [...data.cachedBookings], cachedBookings: data.cachedBookings, isFetching: false});\n        }\n      },\n      [filter]);\n\n  \n      useEffect(() => {\n\n       loadData(topCount)\n    \n      }, [state.bookingDialogDataChanged]);    \n\n\n  const handleCloseSeeDetaisDialog = () =>\n  {\n    setSelectedBooking(null);\n    setSeeDetailsDialogOpen(false);\n  }    \n  \n  const openDetailsDialog = (event, id) =>\n  {\n    const booking = data.bookings.find(element => element._id === id);\n    setSelectedBooking(booking);\n    setSeeDetailsDialogOpen(true);\n\n  }\n\n  const refreshClicked = (event) =>{\n    setFilter('');\n    loadData(topCount)\n  }\n\n  const filterChanged = (event) =>{\n    setFilter(event.target.value);\n  }\n\n  const handleSelectionChanged = (newSelection) =>\n  {\n    if (newSelection.length > 0){\n      setSelectedRow(newSelection.rows[0]);\n    }\n    \n  }\n\n  const [page, setPage] = React.useState(1);\n\n  const handleExcelButtonClicked = (event) =>\n  {\n    setOpenDialogExcel(true);\n  }\n\n  const isTopSelectHidden = (date)=>\n  {\n    return date === 'live' || date === 'positive' || date === 'late' || date === 'today'\n  }\n\n\n  return (\n    <React.Fragment>\n      {data.isFetching && (\n        <div style={{ width: \"100%\", paddingTop: \"3px\" }}>\n          <LinearProgress color=\"primary\" />\n        </div>\n      )}\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid item md={4}>\n          <div style={{ textAlign: \"left\", paddingLeft: \"10px\" }}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <span style={{ paddingRight: \"15px\", color: \"#555\" }}>\n                  {\" \"}\n                  {getTableIcon(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <span\n                  style={{\n                    fontSize: \"1.4rem\",\n                    fontWeight: \"600\",\n                    color: \"#444\",\n                  }}\n                >\n                  {\" \"}\n                  {getTableTitle(props.date)}{\" \"}\n                </span>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Refresh\" placement=\"right\">\n                  <IconButton\n                    color=\"primary\"\n                    className={classes.refreshButton}\n                    onClick={refreshClicked}\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n        <Grid item md={3}>\n          {props.date === \"completed\" && state.showCreateExcel && (\n            <div style={{ paddingBottom: \"5px\" }}>\n              <Button\n                className={classes.ExportToExcelButton}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleExcelButtonClicked}\n                startIcon={\n                  <FontAwesomeIcon\n                    style={{ color: \"#009900\" }}\n                    icon={faFileExcel}\n                  />\n                }\n              >\n                export to excel\n              </Button>\n            </div>\n          )}\n        </Grid>\n\n        {data.isFetching && <div className={classes.HideNowRows}></div>}\n\n        <Grid item md={3}>\n          <TextField\n            variant=\"standard\"\n            value={filter}\n            onChange={filterChanged}\n            margin=\"normal\"\n            size=\"small\"\n            id=\"filter\"\n            label=\"Filter\"\n            name=\"filter\"\n            autoComplete=\"off\"\n          />\n        </Grid>\n\n        <Grid item hidden={isTopSelectHidden(props.date)}>\n          <FormControl className={classes.topSelect}>\n            <InputLabel id=\"top-select-label\">Limit</InputLabel>\n            <Select\n              labelId=\"top-select-label\"\n              id=\"top-simple-select\"\n              value={topCount}\n              onChange={topCountChanged}\n            >\n              <MenuItem value={25}>25</MenuItem>\n              <MenuItem value={50}>50</MenuItem>\n              <MenuItem value={100}>100</MenuItem>\n              <MenuItem value={500}>500</MenuItem>\n              <MenuItem value={1000}>1000</MenuItem>\n              <MenuItem value={10000}>ALL</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* <Button onClick={() => loadData(true)}> Show all records </Button> */}\n        </Grid>\n      </Grid>\n\n      <div style={{ height: 700, width: \"100%\" }}>\n        <DataGrid\n          rows={data.bookings}\n          columns={columns}\n          autoPageSize\n          page={page}\n          onPageChange={(params) => {\n            setPage(params.page);\n          }}\n          onSelectionChange={handleSelectionChanged}\n        />\n      </div>\n\n\n      <BookingDialog\n        booking={selectedBooking}\n        open={seeDetailsDialogOpen && selectedBooking && selectedBooking.fullname}\n        onClose={handleCloseSeeDetaisDialog}\n      />\n\n      {data.bookings && data.bookings.length > 0 && (\n        <Dialog\n          maxWidth=\"lg\"\n          open={openDialogExcel}\n          onClose={handleCloseDialogExcel}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"draggable-dialog-title\">\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <FontAwesomeIcon\n                  style={{ color: \"#2f942e\", fontSize: \"2rem\" }}\n                  icon={faFileExcel}\n                />\n              </Grid>\n\n              <Grid item>\n                <div\n                  style={{\n                    color: \"#2f942e\",\n                    paddingBottom: \"5px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  {\" \"}\n                  Export to EXCEL{\" \"}\n                </div>\n              </Grid>\n            </Grid>\n\n            <Divider />\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                minHeight: \"600px\",\n                maxHeight: \"600px\",\n                minWidth: \"1200px\",\n                maxWidth: \"1200px\",\n              }}\n            >\n              <div>\n                <Grid row container justify=\"center\" spacing={3}>\n                  <Grid item>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={justCorporate}\n                          onChange={justCorporateChanged}\n                          name=\"justCorporate\"\n                        />\n                      }\n                      label=\"Just Corporate Records\"\n                    />\n                  </Grid>\n\n                  {justCorporate && (\n                    <Grid item>\n                      <FormControl\n                        style={{ marginTop: \"0px\" }}\n                        className={classes.formControl}\n                      >\n                        <Select\n                          labelId=\"select-corporate\"\n                          id=\"select-corporate-id\"\n                          value={corporate}\n                          onChange={corporateChanged}\n                        >\n                          {corporates.map((element) => (\n                            <MenuItem value={element}>{`${element}`}</MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  )}\n                </Grid>\n\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid row container justify=\"center\" spacing={3}>\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-from\"\n                        label=\"From\"\n                        value={fromDate}\n                        onChange={handleFromDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd/MM/yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-until\"\n                        label=\"Until\"\n                        value={untilDate}\n                        onChange={handleUntilDateChange}\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\",\n                        }}\n                      />\n                    </Grid>\n\n                    <Grid item>\n                      <div style={{ paddingTop: \"30px\", marginLeft: \"20px\" }}>\n                        <ReactHTMLTableToExcel\n                          id=\"test-table-xls-button\"\n                          className={classes.ExportToExcelButtonInline}\n                          table=\"table-to-xls\"\n                          filename={`PCR.Report.${fromDateStr}.${untilDateStr}`}\n                          sheet=\"PCR-Report\"\n                          buttonText=\"Download as XLS\"\n                        />\n                      </div>\n                    </Grid>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDate}\n                          onChange={chkDateChanged}\n                          name=\"chkDate\"\n                        />\n                      }\n                      label=\"Date\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkForename}\n                          onChange={chkForenameChanged}\n                          name=\"chkForename\"\n                        />\n                      }\n                      label=\"Forename\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkSurname}\n                          onChange={chkSurnameChanged}\n                          name=\"chkSurname\"\n                        />\n                      }\n                      label=\"Surname\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkDOB}\n                          onChange={chkDOBChanged}\n                          name=\"chkDOB\"\n                        />\n                      }\n                      label=\"D.O.B\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkEmail}\n                          onChange={chkEmailChanged}\n                          name=\"chkEmail\"\n                        />\n                      }\n                      label=\"Email\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkTel}\n                          onChange={chkTelChanged}\n                          name=\"chkTel\"\n                        />\n                      }\n                      label=\"Tel\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkCertificate}\n                          onChange={chkCertificateChanged}\n                          name=\"chkCertificate\"\n                        />\n                      }\n                      label=\"Certificate\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkAntiBodyTest}\n                          onChange={chkAntiBodyTestChanged}\n                          name=\"chkAntiBodyTest\"\n                        />\n                      }\n                      label=\"AntiBodyTest\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkextRef}\n                          onChange={chkextRefChanged}\n                          name=\"chkextRef\"\n                        />\n                      }\n                      label=\"Lab No.\"\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={chkPrice}\n                          onChange={chkPriceChanged}\n                          name=\"chkPrice\"\n                        />\n                      }\n                      label=\"Price\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div style={{ width: \"100%\", paddingTop: \"20px\" }}>\n                <table className={classes.table} id=\"table-to-xls\">\n                  <tr>\n                    {chkDate && <th className={classes.th}>Date</th>}\n                    {chkForename && <th className={classes.th}>Forename</th>}\n                    {chkSurname && <th className={classes.th}>Surename</th>}\n                    {chkDOB && <th className={classes.th}>D.O.B</th>}\n                    {chkEmail && <th className={classes.th}>Email</th>}\n                    {chkTel && <th className={classes.th}>Tel</th>}\n                    {chkCertificate && (\n                      <th className={classes.th}>Certificate</th>\n                    )}\n                    {chkAntiBodyTest && (\n                      <th className={classes.th}>AntiBodyTest</th>\n                    )}\n                    {chkextRef && <th className={classes.th}>Lab No.</th>}\n                    {chkPrice && <th className={classes.th}>Price (£) </th>}\n                  </tr>\n\n                  {data.bookings\n                    .filter((booking) => {\n                      if (!justCorporate) {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr\n                        );\n                      } else {\n                        return (\n                          booking.bookingDate >= fromDateStr &&\n                          booking.bookingDate <= untilDateStr &&\n                          booking.paid &&\n                          booking.paidBy === \"corporate\" &&\n                          booking.corporate === corporate\n                        );\n                      }\n                    })\n\n                    .map((booking) => (\n                      <tr>\n                        {chkDate && (\n                          <td className={classes.td}>\n                            {FormatDateFromString(booking.bookingDate)}\n                          </td>\n                        )}\n                        {chkForename && (\n                          <td className={classes.td}>\n                            {booking.forenameCapital}\n                          </td>\n                        )}\n                        {chkSurname && (\n                          <td className={classes.td}>\n                            {booking.surnameCapital}\n                          </td>\n                        )}\n                        {chkDOB && (\n                          <th className={classes.th}>\n                            {/* {FormatDateFromString(booking.birthDate)} */}\n                          </th>\n                        )}\n                        {chkEmail && (\n                          <td className={classes.td}>{booking.email}</td>\n                        )}\n                        {chkTel && (\n                          <td className={classes.td}>{booking.phone}</td>\n                        )}\n                        {chkCertificate && (\n                          <td className={classes.td}>\n                            {booking.certificate ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkAntiBodyTest && (\n                          <td className={classes.td}>\n                            {booking.antiBodyTest ? \"YES\" : \"NO\"}\n                          </td>\n                        )}\n                        {chkextRef && (\n                          <td className={classes.td}>{booking.extRef}</td>\n                        )}\n                        {chkPrice && (\n                          <td className={classes.td}>\n                            {PriceCalculator.calculatePrice(booking)}\n                          </td>\n                        )}\n                      </tr>\n                    ))}\n                </table>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n} ",["271","272"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/PersonsBox.js",["273","274","275","276","277","278","279","280","281"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/Corporates.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/DateFormatter.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/services/PDFService.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/Title.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/Title.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/Title.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/BookingDialog.js",["282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n    color: theme.palette.secondary.main,\n    fontSize: \"0.9rem\",\n  },\n\n  infoData: {\n    fontWeight: \"500\",\n    fontSize: \"1rem\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#b80012\", \n    color: \"#fff\",\n    \"&:hover\": {\n      background: \"#d90015\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    color: \"#fff\",\n\n    backgroundColor:  \"#bd0d50\",\n    \"&:hover\": {\n      background: \"#d1175e\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n\n  dialogTitle: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"#fff\",\n  },\n\n  question:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"400\",\n    color: theme.palette.secondary.main,\n    marginTop:\"30px\"\n  },\n\n  answer:{\n    fontSize:\"1.3rem\",\n    fontWeight: \"500\",\n    color: theme.palette.primary.main,\n  },\n\n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  const [openQDialg, setOpenQDialog] = React.useState(false)\n  const handleQDialgClose = () =>\n  {\n    setOpenQDialog(false)\n  }\n\n  const fixQuestion = (str) =>\n  {\n    let result = str.replace('*', '')\n    if (!result.trim().endsWith('?'))\n    {\n      result += '?'\n    }\n    return result\n  }\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"xs\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              className={classes.dialogTitle}\n              style={{position:\"relative\"}}\n            >\n              {booking.questions && (\n                 <div style={{position:\"absolute\", right:\"10px\", top:\"12px\", backgroundColor:\"#069c00\", fontSize:\"0.85rem\", padding:\"8px\", borderRadius:\"10px\"}}>\n                   Self-Test\n                 </div>\n              )}\n\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={{\n                          padding: 0,\n                          margin: 0,\n                          color: \"#fff\",\n                          fontSize: 25,\n                        }}\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE :\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME :\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              FULLNAME :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>EMAIL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>TEL : </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <span className={classes.infoTitle}>\n                              Consultation :{\" \"}\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.faceToFaceConsultation && (\n                                <span> Face to Face </span>\n                              )}\n                              {((booking.faceToFaceConsultation &&\n                                booking.telephoneConsultation) ||\n                                (!booking.faceToFaceConsultation &&\n                                  !booking.telephoneConsultation)) && (\n                                <span\n                                  style={{\n                                    paddingLeft: \"5px\",\n                                    paddingRight: \"5px\",\n                                  }}\n                                >\n                                  {\" \"}\n                                  -{\" \"}\n                                </span>\n                              )}\n                              {booking.telephoneConsultation && (\n                                <span> Telephone </span>\n                              )}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <Divider />\n\n                      {booking.questions && (\n                        <React.Fragment>\n                          <div style={{display:\"flex\", justifyContent:\"center\"}}>\n                          <Button fullWidth variant=\"contained\" color=\"primary\" style={{color:\"#fff\",margin:\"10px\"}} onClick={() => setOpenQDialog(true)}>\n                             Show questionnaire\n                          </Button>\n                          </div>\n                          <Divider />\n                        </React.Fragment>\n                      )}\n\n                   \n\n                      \n                      <div style={{marginTop:\"20px\"}}>\n\n                      </div>\n\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"10px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to archive this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Archive This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Archive This Record\n                          </Button>\n                        }\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Archive this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n          </Dialog>\n\n          <Dialog\n            open={openQDialg}\n            onClose={handleQDialgClose}\n            maxWidth=\"sm\"\n          >\n            <DialogContent>\n                      {booking.questions && JSON.parse(booking.questions).map(item => (\n                        <div >\n                          <div className={classes.question}>\n                            {fixQuestion(item.question)}\n                          </div>\n                          <div className={classes.answer}>\n                            {item.answer}\n                          </div>\n                        </div>\n                      ))}\n            </DialogContent>\n\n            <DialogActions>\n              <Button onClick={() => setOpenQDialog(false)}>\n                Close\n              </Button>\n            </DialogActions>\n\n          </Dialog>\n\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n",["328","329"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/DateFormatter.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/DayView.js",["330","331"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/Chart.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/BookingDialog.js",["332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GlobalState from \"./../GlobalState\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContentText,\n  Divider,\n  FormControlLabel,\n  IconButton,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport PDFService from \"./services/PDFService\";\n\nimport { calculatePrice } from \"./PriceCalculator\";\n\nimport bookingService from \"./services/BookService\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BookService from \"./services/BookService\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  FormatDateFromString,\n  RevertFormatDateFromString,\n} from \"./DateFormatter\";\nimport PayDialog from \"./PayDialog\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport HistoryIcon from \"@material-ui/icons/History\";\n\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { CalendarColors } from \"../Admin/calendar-admin/colors\";\nimport InvoiceDialog from \"../InvoiceDialog\";\nimport InvoiceService from \"../services/InvoiceService\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: \"#373737\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxRed: {\n    backgroundColor: \"#dc2626\",\n    color: \"#fff\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    textAlign: \"justify\",\n    paddingRight: \"40px\",\n  },\n\n  boxInfo: {\n    textAlign: \"justify\",\n    backgroundColor: \"#fafafa\",\n    color: \"#333\",\n    padding: \"1px\",\n    borderRadius: \"4px\",\n    paddingRight: \"40px\",\n    border: \"1px solid #eee\",\n  },\n\n  ul: {\n    listStyle: \"none\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n\n  li: {\n    marginBottom: \"15px\",\n  },\n\n  icon: {\n    marginRight: \"8px\",\n  },\n\n  root: {\n    width: \"100%\",\n  },\n\n  lineThrough: {\n    textDecoration: \"line-through\",\n  },\n\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n\n  infoDetails: {\n    textAlign: \"left\",\n  },\n\n  infoTitle: {\n    fontWeight: \"800\",\n    marginRight: \"10px\",\n  },\n\n  infoData: {\n    fontWeight: \"400\",\n  },\n\n  title: {\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n    marginBottom: \"5px\",\n  },\n\n  Accordion: {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#222\",\n  },\n\n  AccordionDeleted: {\n    backgroundColor: \"#aaa\",\n    color: \"#555\",\n  },\n\n  DownloadForm: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  },\n\n  infoDataCharges: {\n    fontSize: \"18px\",\n    color: \"green\",\n    fontWeight: \"600\",\n  },\n\n  infoDataChargesHigher: {\n    fontSize: \"18px\",\n    color: \"red\",\n    fontWeight: \"600\",\n  },\n  BookedLabel: {\n    color: \"#606060\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#606060\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  PatientAttendedLabel: {\n    color: \"#0066aa\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066aa\",\n    width: \"150px\",\n    display: \"inline-block\",\n  },\n\n  SampleTakenLabel: {\n    color: \"#0066cc\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#0066cc\",\n  },\n\n  ReportSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  ReportCertSentLabel: {\n    color: \"#009900\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"#009900\",\n  },\n\n  PositiveLabel: {\n    color: \"red\",\n    paddingRight: \"10px\",\n    paddingLeft: \"5px\",\n    paddingBottom: \"3px\",\n    paddingTop: \"3px\",\n    fontWeight: \"800\",\n    borderLeft: \"5px solid\",\n    borderColor: \"red\",\n  },\n\n  EditButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  ResendEmailsButton: {\n    // marginBottom : \"20px\",\n    color: \"#2f942e\",\n    borderColor: \"#2f942e\",\n    \"&:hover\": {\n      background: \"#fafffa\",\n      borderColor: \"#2f942e\",\n    },\n    textDecoration: \"none !important\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n\n  PayButton: {\n    marginLeft: \"70px\",\n    width: \"300px\",\n  },\n\n  printInvoiceButton: {\n    marginLeft: \"70px\",\n    fontSize: \"0.8rem\",\n    // width: \"300px\",\n  },\n\n  editInvoiceButton: {\n    marginLeft: \"10px\",\n    fontSize: \"0.8rem\",\n  },\n\n  PayLabel: {\n    marginLeft: \"20px\",\n\n    color: \"#2f942e\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  RestoreButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#eee\",\n    color: \"#333\",\n    \"&:hover\": {\n      background: \"#f1f1f1\",\n      color: \"#111\",\n    },\n    textDecoration: \"none !important\",\n    padding: \"10px\",\n  },\n\n  DeleteButton: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#d90015\",\n    \"&:hover\": {\n      background: \"#b80012\",\n      color: \"#fff\",\n    },\n\n    padding: \"10px\",\n  },\n\n  SaveButton: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n\n    backgroundColor: \"#d1175e\",\n    \"&:hover\": {\n      background: \"#bd0d50\",\n      color: \"#fff\",\n    },\n  },\n\n  CancelButton: {\n    marginBottom: \"20px\",\n    // padding: \"10px\"\n  },\n\n  TextBox: {\n    padding: \"0px\",\n  },\n\n  checkIcon: {\n    color: \"green\",\n  },\n\n  checkIconSmall: {\n    color: \"green\",\n    paddingTop: \"5px\",\n  },\n\n  closeIcon: {\n    color: \"red\",\n  },\n\n  centeredLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 5,\n    color: \"#fff\",\n  },\n\n  invoiceNumber: {\n    display: \"inline-block\",\n    fontWeight: \"500\",\n    width: \"72px\",\n    fontSize: \"1rem\",\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#alert-dialog-slide-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function BookingDialog(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useContext(GlobalState);\n\n  const [copied, setCopied] = useState(false);\n\n  const [emailSent, setEmailSent] = React.useState(false);\n  const [emailSentInvoice, setEmailSentInvoice] = React.useState(false);\n\n  const [openResendDialog, setOpenResendDialog] = React.useState(false);\n  const [openPayDialog, setOpenPayDialog] = React.useState(false);\n  const [openRefundDialog, setOpenRefundDialog] = React.useState(false);\n\n  const [openInvoiceDialog, setOpenInvoiceDialog] = React.useState(false);\n\n  const [selectedBooking, setSelectedBooking] = React.useState(null);\n\n  const [editMode, setEditMode] = React.useState({ edit: false, person: null });\n  const [deleteMode, setDeleteMode] = React.useState({\n    delete: false,\n    person: null,\n  });\n  const [restoreMode, setRestoreMode] = React.useState({\n    restore: false,\n    person: null,\n  });\n\n  const [saving, setSaving] = React.useState(false);\n  const [deleting, setDeleting] = React.useState(false);\n  const [restoring, setRestoring] = React.useState(false);\n\n  const [validationError, setValidationError] = React.useState({});\n\n  const [bookingDate, setBookingDate] = React.useState(\"\");\n  const [bookingTime, setBookingTime] = React.useState(\"\");\n\n  const [fullname, setFullname] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [tel, setTel] = React.useState(\"\");\n  const [notes, setNotes] = React.useState(\"\");\n  const [service, setService] = React.useState(\"\");\n\n  const [refreshData, setRefreshData] = React.useState(false);\n\n  const [booking, setBooking] = React.useState(null);\n\n  const [recordChanged, setRecordChanged] = React.useState(false);\n\n  const [fieldChanged, setFieldChanged] = React.useState(false);\n\n  const [openUndoPayDialog, setOpenUndoPayDialog] = React.useState(false);\n\n  const [openTimeStampDialog, setOpenTimeStampDialog] = React.useState(false);\n\n  const [invoice, setInvoice] = React.useState(null);\n  const [invoiceLoaded, setInvoiceLoaded] = React.useState(false);\n\n  const fetchInvoice = async () => {\n    try {\n      setInvoiceLoaded(false);\n      const res = await InvoiceService.getInvoiceByBookingId(props.booking._id);\n      setInvoice(res.data.invoice);\n      setInvoiceLoaded(true);\n    } catch (err) {\n      setInvoiceLoaded(true);\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.booking) {\n      fetchInvoice();\n    }\n  }, [props.booking, props.open]);\n\n  const handleCloseTimeStampDialog = () => {\n    setOpenTimeStampDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseUndoPayDialog = () => {\n    setOpenUndoPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseResendDialog = () => {\n    setOpenResendDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleClosePayDialog = () => {\n    setOpenPayDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseRefundDialog = () => {\n    setOpenRefundDialog(false);\n    setSelectedBooking(null);\n  };\n\n  const handleCloseInvoiceDialog = (refresh) => {\n    setOpenInvoiceDialog(false);\n    setSelectedBooking(null);\n    fetchInvoice();\n  };\n\n  useEffect(() => {\n    if (booking) {\n      const isChanged =\n        bookingDate !== FormatDateFromString(booking.bookingDate) ||\n        bookingTime !== booking.bookingTime ||\n        fullname !== booking.fullname ||\n        email !== booking.email ||\n        tel !== booking.phone ||\n        notes !== booking.notes;\n\n      setRecordChanged(isChanged);\n    }\n  }, [fieldChanged]);\n\n  useEffect(() => {\n    if (!props.open) {\n      setTimeout(() => {\n        setEditMode({ edit: false, person: null });\n        setRecordChanged(false);\n      }, 500);\n    }\n  }, [props.open]);\n\n  const bookingDateChanged = (event) => {\n    setBookingDate(event.target.value);\n    setValidationError({ ...validationError, bookingDateError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const bookingTimeChanged = (event) => {\n    setBookingTime(event.target.value);\n    setValidationError({ ...validationError, bookingTimeError: false });\n    setFieldChanged(!fieldChanged);\n  };\n\n  const fullnameChanged = (event) => {\n    setFullname(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const emailChanged = (event) => {\n    setEmail(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const telChanged = (event) => {\n    setTel(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const serviceChanged = (event) => {\n    setService(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const notesChanged = (event) => {\n    setNotes(event.target.value);\n    setFieldChanged(!fieldChanged);\n  };\n\n  const getStatusLabel = (status) => {\n    if (status === \"booked\") {\n      return <div className={classes.BookedLabel}> Booking Made </div>;\n    } else if (status === \"patient_attended\") {\n      return (\n        <div className={classes.PatientAttendedLabel}> Patient Attended </div>\n      );\n    } else {\n      return \"Unknown\";\n    }\n  };\n\n  const handleEditModeChanged = (edit, person) => {\n    if (edit) {\n      setFullname(person.fullname);\n      setBookingDate(FormatDateFromString(person.bookingDate));\n      setBookingTime(person.bookingTime.toUpperCase());\n      setEmail(person.email);\n      setTel(person.phone);\n      if (person.notes) {\n        setNotes(person.notes);\n      }\n\n      setEditMode({ edit: edit, person: person });\n    } else if (!edit && !person) {\n      setEditMode({ edit: edit, person: person });\n      setRecordChanged(false);\n    } else if (!edit && person) {\n      const booking = {};\n      const bookingId = person._id;\n      booking.email = email;\n      booking.phone = tel;\n      booking.fullname = fullname;\n      booking.notes = notes;\n      booking.service = service;\n      booking.bookingDate = RevertFormatDateFromString(bookingDate);\n      booking.bookingTime = bookingTime;\n      booking.bookingRef = person.bookingRef;\n\n      if (validateBooking(booking)) {\n        updateBooking({ bookingId: bookingId, person: booking });\n      }\n    }\n  };\n\n  const validateDate = (str) => {\n    var error = false;\n    if (!str || str.length !== 10) {\n      error = true;\n    }\n\n    if (str.charAt(4) !== \"-\" || str.charAt(7) !== \"-\") {\n      error = true;\n    }\n\n    try {\n      const result = /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n      if (!result) {\n        error = true;\n      }\n\n      const year = parseInt(str.substr(0, 4));\n      const month = parseInt(str.substr(5, 2));\n      const day = parseInt(str.substr(8, 2));\n\n      if (year < 1900) {\n        error = true;\n      }\n\n      if (month < 1 || month > 12) {\n        error = true;\n      }\n\n      if (day > 31) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateTime = (str) => {\n    var error = false;\n\n    const result = /^\\d{2}:\\d{2} AM$|^\\d{2}:\\d{2} PM$/.test(str);\n    if (!result) {\n      error = true;\n    }\n\n    try {\n      const hour = parseInt(str.substr(0, 2));\n      const minute = parseInt(str.substr(3, 2));\n\n      if (hour < 0 || hour > 12) {\n        error = true;\n      }\n\n      if (minute < 0 || minute > 59) {\n        error = true;\n      }\n    } catch (err) {\n      error = true;\n    }\n\n    return !error;\n  };\n\n  const validateBooking = (booking) => {\n    var error = false;\n\n    if (!validateDate(booking.bookingDate)) {\n      error = true;\n      setValidationError({ ...validationError, bookingDateError: true });\n    }\n\n    if (!validateTime(booking.bookingTime)) {\n      error = true;\n      setValidationError({ ...validationError, bookingTimeError: true });\n    }\n    return !error;\n  };\n\n  const updateBooking = (payload) => {\n    setSaving(true);\n    bookingService\n      .updateBooking(payload)\n      .then((res) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setSaving(false);\n        setEditMode({ edit: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const deleteBooking = (id) => {\n    setDeleting(true);\n    bookingService\n      .deleteBooking(id)\n      .then((res) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setDeleting(false);\n        setDeleteMode({ delete: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const restoreBooking = (id) => {\n    setRestoring(true);\n    bookingService\n      .unDeleteBooking(id)\n      .then((res) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        setRestoring(false);\n        setRestoreMode({ restore: false, person: null });\n        console.log(err);\n      });\n  };\n\n  const handleDeleteModeChanged = (del, person) => {\n    if (del) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && !person) {\n      setDeleteMode({ delete: del, person: person });\n    } else if (!del && person) {\n      deleteBooking(person._id);\n    }\n  };\n\n  const handleRestoreModeChanged = (restore, person) => {\n    if (restore) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && !person) {\n      setRestoreMode({ restore: restore, person: person });\n    } else if (!restore && person) {\n      restoreBooking(person._id);\n    }\n  };\n\n  const changeBackToBookingMade = (event, id) => {\n    setSaving(true);\n    BookService.changeBackToBookingMade(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const changeToPatientAttended = (event, id) => {\n    setSaving(true);\n    BookService.changeToPatientAttended(id)\n      .then((res) => {\n        setSaving(false);\n        setRefreshData(!refreshData);\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const Pay = () => {\n    setSelectedBooking(booking);\n    setOpenPayDialog(true);\n  };\n\n  const OpenInvoiceDialog = () => {\n    setSelectedBooking(booking);\n    setInvoice(invoice);\n    setOpenInvoiceDialog(true);\n  };\n\n  useEffect(() => {\n    if (props.booking) {\n      BookService.getBookingById(props.booking._id)\n        .then((res) => {\n          setBooking(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      setState((state) => ({\n        ...state,\n        bookingDialogDataChanged: !state.bookingDialogDataChanged\n          ? true\n          : false,\n      }));\n    }\n  }, [refreshData, state.bookingPayChanged]);\n\n  useEffect(() => {\n    if (props.booking) {\n      setBooking(props.booking);\n    }\n  }, [props.booking]);\n\n  const undoPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.unPayBooking(booking._id);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenUndoPayDialog(false);\n    }\n  };\n\n  const refundPaymentClicked = async () => {\n    setSaving(true);\n    try {\n      await BookService.refundBooking(booking._id);\n      setSaving(false);\n      updateShouldRefundsCount();\n      setOpenRefundDialog(false);\n      setRefreshData(!refreshData);\n    } catch (err) {\n      console.error(err);\n      setSaving(false);\n      setOpenRefundDialog(false);\n    }\n  };\n\n  const updateShouldRefundsCount = async () => {\n    try {\n      const res = await BookService.getShouldRefundsCount();\n      if (res && res.data && res.data.status === \"OK\") {\n        setState((state) => ({ ...state, shouldRefunsCount: res.data.count }));\n      }\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  const downloadRegForm = (id) => {\n    PDFService.downloadGPRegForm(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadInvoice = (id) => {\n    InvoiceService.downloadInvoice(id)\n      .then((res) => {\n        const file = new Blob([res.data], { type: \"application/pdf\" });\n\n        const fileURL = URL.createObjectURL(file);\n        window.open(fileURL, \"_blank\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const sendRegForm = (id) => {\n    setSaving(true);\n    setEmailSent(false);\n    BookService.sendRegFormEmail(id)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSent(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const sendInvoiceEmail = (id, _email) => {\n    setSaving(true);\n    setEmailSentInvoice(false);\n    InvoiceService.emailInvoice(id, _email)\n      .then((res) => {\n        setSaving(false);\n        if (res.data.status === \"OK\") {\n          setEmailSentInvoice(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaving(false);\n      });\n  };\n\n  const onClose = () => {\n    setEmailSent(false);\n    setEmailSentInvoice(false);\n    setInvoice(null);\n    props.onClose();\n  };\n\n  return (\n    <React.Fragment>\n      {booking && (\n        <React.Fragment>\n          <Dialog\n            maxWidth=\"md\"\n            open={props.open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={onClose}\n            PaperComponent={PaperComponent}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle\n              id=\"alert-dialog-slide-title\"\n              style={\n                booking.tr ? { backgroundColor: \"#7e0082\", color: \"#fff\" } : {}\n              }\n            >\n              <div style={{ position: \"absolute\", top: \"25x\", left: \"25px\" }}>\n                <Tooltip title=\"COPY EDIT LINK TO CLIPBOARD\">\n                  <IconButton\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        `https://londonmedicalclinic.co.uk/medicalexpressclinic/user/edit/gynae/${booking._id}`\n                      );\n                      setCopied(true);\n                      setTimeout(() => {\n                        setCopied(false);\n                      }, 1500);\n                    }}\n                    aria-label=\"delete\"\n                    className={classes.margin}\n                    size=\"small\"\n                  >\n                    <FileCopyOutlinedIcon\n                      style={booking.tr ? { color: \"#ddd\" } : {}}\n                      fontSize=\"14px\"\n                    />\n                  </IconButton>\n                </Tooltip>\n\n                <span\n                  hidden={!copied}\n                  style={{ fontSize: \"12px\", transition: \"all 1s ease-in\" }}\n                >\n                  {\" \"}\n                  Copied{\" \"}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  top: \"25x\",\n                  right: \"60px\",\n                  backgroundColor: CalendarColors.GP_COLOR,\n                  color: \"#fff\",\n                  padding: \"0px 5px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                GP\n              </div>\n\n              {/* {booking.tr && (\n                <div style={{position:\"absolute\",  right: \"15px\"}}>\n                     TR\n                </div>\n\n              )} */}\n\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                spacing={2}\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <div\n                    style={\n                      booking.deleted\n                        ? {\n                            paddingBottom: \"5px\",\n                            textDecoration: \"line-through\",\n                          }\n                        : {}\n                    }\n                  >\n                    {`${booking.fullname}`}\n                  </div>\n                </Grid>\n\n                {booking.deleted && (\n                  <Grid item>\n                    <Tooltip title=\"This record has been deleted.\">\n                      <DeleteIcon\n                        style={\n                          booking.tr\n                            ? {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#fff\",\n                                fontSize: 25,\n                              }\n                            : {\n                                padding: 0,\n                                margin: 0,\n                                color: \"#333\",\n                                fontSize: 25,\n                              }\n                        }\n                      />\n                    </Tooltip>\n                  </Grid>\n                )}\n              </Grid>\n            </DialogTitle>\n            <DialogContent>\n              <div\n                style={{\n                  // height: \"550px\",\n                  paddingTop: \"0px\",\n                }}\n              >\n                <Grid item xs={12} md={12} key={`panel0`}>\n                  <div className={classes.infoDetails}>\n                    <ul className={classes.ul}>\n                      {/* Restore Functionality ******************************************* */}\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"500\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                            color: \"#333\",\n                          }}\n                        >\n                          Are you sure you want to restore this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          !booking.deleted ||\n                          (restoreMode.restore &&\n                            restoreMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleRestoreModeChanged(true, booking);\n                          }}\n                          className={classes.RestoreButton}\n                        >\n                          Restore This Record\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Restore this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            restoreMode.restore &&\n                            restoreMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={restoring}\n                          onClick={() => {\n                            handleRestoreModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/*  ******************************************************************* */}\n\n                      {/* Edit Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          booking.deleted ||\n                          deleteMode.delete ||\n                          (editMode.edit && editMode.person._id === booking._id)\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            handleEditModeChanged(true, booking);\n                          }}\n                          className={classes.EditButton}\n                        >\n                          Edit Booking Info\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={saving || !recordChanged}\n                          onClick={() => {\n                            handleEditModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          Save Changes\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={saving}\n                          onClick={() => {\n                            handleEditModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      {/* Delete Functionality ******************************************* */}\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"5px\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Are you sure you want to delete this record?\n                        </div>\n                      </li>\n\n                      <li\n                        hidden={\n                          props.deleteButtonDisabled ||\n                          booking.deleted ||\n                          editMode.edit ||\n                          (deleteMode.delete &&\n                            deleteMode.person._id === booking._id)\n                        }\n                      >\n                        {booking.OTCCharges > 0 && (\n                          <Tooltip title={\"Paid Records Cannot be Deleted!\"}>\n                            <div>\n                              <Button\n                                disabled={booking.OTCCharges > 0}\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  handleDeleteModeChanged(true, booking);\n                                }}\n                                className={classes.DeleteButton}\n                              >\n                                Delete This Record\n                              </Button>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {booking.OTCCharges === 0 && (\n                          <Button\n                            disabled={booking.OTCCharges > 0}\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                              handleDeleteModeChanged(true, booking);\n                            }}\n                            className={classes.DeleteButton}\n                          >\n                            Delete This Record\n                          </Button>\n                        )}\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, booking);\n                          }}\n                          className={classes.SaveButton}\n                        >\n                          YES, Delete this!\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          !(\n                            deleteMode.delete &&\n                            deleteMode.person._id === booking._id\n                          )\n                        }\n                      >\n                        <Button\n                          type=\"button\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"default\"\n                          disabled={deleting}\n                          onClick={() => {\n                            handleDeleteModeChanged(false, null);\n                          }}\n                          className={classes.CancelButton}\n                        >\n                          Cancel\n                        </Button>\n                      </li>\n\n                      {/* ****************************************************************************************** */}\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED DATE\n                            </span>\n\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {FormatDateFromString(booking.bookingDate)}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingDateError}\n                                className={classes.TextBox}\n                                value={bookingDate}\n                                onChange={bookingDateChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>\n                              BOOKED TIME\n                            </span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.bookingTime.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                error={validationError.bookingTimeError}\n                                className={classes.TextBox}\n                                value={bookingTime}\n                                onChange={bookingTimeChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>FULLNAME</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.fullname}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={fullname}\n                                onChange={fullnameChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>EMAIL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.email}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={email}\n                                onChange={emailChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n                      <li className={classes.li}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>TEL</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.phone?.toUpperCase()}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={tel}\n                                onChange={telChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                          <Grid item xs={6}>\n                            <span className={classes.infoTitle}>NOTES</span>\n                            <span\n                              hidden={\n                                editMode.edit &&\n                                editMode.person._id === booking._id\n                              }\n                              className={classes.infoData}\n                            >\n                              {booking.notes}\n                            </span>\n                            <span\n                              hidden={\n                                !(\n                                  editMode.edit &&\n                                  editMode.person._id === booking._id\n                                )\n                              }\n                              className={classes.infoData}\n                            >\n                              <TextField\n                                fullWidth\n                                className={classes.TextBox}\n                                value={notes}\n                                onChange={notesChanged}\n                                inputProps={{\n                                  style: {\n                                    padding: 0,\n                                  },\n                                }}\n                              ></TextField>\n                            </span>\n                          </Grid>\n                        </Grid>\n                      </li>\n\n                      <li className={classes.li} style={{ paddingTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>STATUS</span>{\" \"}\n                        {getStatusLabel(booking.status)}\n                        {booking.status === \"patient_attended\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeBackToBookingMade(event, booking._id)\n                              }\n                            >\n                              Change Back To Booking Made\n                            </Button>\n                          )}\n                        {booking.status === \"booked\" &&\n                          !(\n                            editMode.edit && editMode.person._id === booking._id\n                          ) &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"default\"\n                              disabled={saving}\n                              style={{ width: \"300px\" }}\n                              onClick={(event) =>\n                                changeToPatientAttended(event, booking._id)\n                              }\n                            >\n                              Change To Patient Attended\n                            </Button>\n                          )}\n                      </li>\n\n                      <li hidden={booking.deleted || editMode.edit}>\n                        <Button\n                          disabled={!booking.formData}\n                          startIcon={<PrintIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            downloadRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                        >\n                          Download Registration Form\n                        </Button>\n                      </li>\n\n                      <li\n                        hidden={\n                          booking.deleted || editMode.edit || booking.formData\n                        }\n                      >\n                        <Button\n                          disabled={!booking.email || booking.email.length < 3}\n                          startIcon={<SendIcon />}\n                          type=\"button\"\n                          fullWidth\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            sendRegForm(booking._id);\n                          }}\n                          className={classes.DownloadForm}\n                          style={{ position: \"relative\" }}\n                        >\n                          Send Registration Form Email\n                          {emailSent && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                right: \"10px\",\n                                top: \"5px\",\n                                color: \"#05ad19\",\n                              }}\n                            >\n                              Email Sent\n                            </div>\n                          )}\n                        </Button>\n                      </li>\n\n                      <Divider />\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>INVOICE # : </span>{\" \"}\n                        <span style={{ paddingLeft: \"0px\" }}>\n                          {!invoiceLoaded && (\n                            <span className={classes.invoiceNumber}> ... </span>\n                          )}\n                          {invoiceLoaded && invoice && (\n                            <span className={classes.invoiceNumber}>\n                              {\" \"}\n                              {invoice.invoiceNumber}{\" \"}\n                            </span>\n                          )}\n                          {invoiceLoaded && !invoice && (\n                            <span\n                              className={classes.invoiceNumber}\n                              style={{ color: \"red\", fontSize: \"0.9rem\" }}\n                            >\n                              {\" \"}\n                              N/A{\" \"}\n                            </span>\n                          )}\n                        </span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.deleted && (\n                            <React.Fragment>\n                              {invoiceLoaded && !invoice && (\n                                <Button\n                                  variant=\"outlined\"\n                                  color=\"primary\"\n                                  className={classes.PayButton}\n                                  onClick={() => OpenInvoiceDialog()}\n                                >\n                                  Issue Invoice\n                                </Button>\n                              )}\n\n                              {invoiceLoaded && invoice && (\n                                <React.Fragment>\n                                  <Button\n                                    variant=\"outlined\"\n                                    startIcon={<PrintIcon />}\n                                    color=\"primary\"\n                                    className={classes.printInvoiceButton}\n                                    onClick={() => downloadInvoice(invoice._id)}\n                                  >\n                                    Download Invoice\n                                  </Button>\n\n                                  <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    className={classes.editInvoiceButton}\n                                    onClick={() => OpenInvoiceDialog()}\n                                  >\n                                    Edit Invoice\n                                  </Button>\n\n                                  <Button\n                                    disabled={\n                                      !booking.email || booking.email.length < 3\n                                    }\n                                    startIcon={<SendIcon />}\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      sendInvoiceEmail(\n                                        invoice._id,\n                                        booking.email\n                                      );\n                                    }}\n                                    style={{\n                                      position: \"relative\",\n                                      marginLeft: \"10px\",\n                                      paddingRight: \"130px\",\n                                      fontSize: \"0.8rem\",\n                                    }}\n                                  >\n                                    Send Invoice By Email\n                                    {emailSentInvoice && (\n                                      <div\n                                        style={{\n                                          position: \"absolute\",\n                                          right: \"10px\",\n                                          top: \"5px\",\n                                          color: \"#05ad19\",\n                                        }}\n                                      >\n                                        Email Sent\n                                      </div>\n                                    )}\n                                  </Button>\n                                </React.Fragment>\n                              )}\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      <li className={classes.li} style={{ marginTop: \"20px\" }}>\n                        <span className={classes.infoTitle}>TOTAL CHARGES</span>{\" \"}\n                        <span\n                          style={{ paddingLeft: \"15px\" }}\n                          className={\n                            !booking.OTCCharges || booking.OTCCharges === 0\n                              ? classes.infoDataChargesHigher\n                              : classes.infoDataCharges\n                          }\n                        >{`£${booking.OTCCharges.toLocaleString(\n                          \"en-GB\"\n                        )}`}</span>\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          !booking.paid &&\n                          !booking.deleted && (\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.PayButton}\n                              onClick={(event) => Pay()}\n                            >\n                              Pay\n                            </Button>\n                          )}\n                        {!(\n                          editMode.edit && editMode.person._id === booking._id\n                        ) &&\n                          booking.paid && (\n                            <React.Fragment>\n                              <span className={classes.PayLabel}>\n                                {\" \"}\n                                <CheckIcon\n                                  className={classes.checkIconSmall}\n                                />{\" \"}\n                                Paid by {booking.paidBy}\n                                {booking.paidBy === \"corporate\"\n                                  ? ` \"${booking.corporate}\" `\n                                  : \"\"}\n                              </span>\n\n                              <Tooltip title=\"Undo Payment\">\n                                <IconButton\n                                  onClick={() => setOpenUndoPayDialog(true)}\n                                >\n                                  <UndoIcon style={{ color: \"red\" }} />\n                                </IconButton>\n                              </Tooltip>\n                            </React.Fragment>\n                          )}\n                      </li>\n\n                      {/* <li className={classes.li}>\n                        <div\n                          style={{\n                            borderTop: \"1px solid #ddd\",\n                            paddingTop: \"10px\",\n                          }}\n                        >\n                          <span className={classes.infoTitle}>\n                            TOTAL CHARGES\n                          </span>{\" \"}\n                          <span\n                            className={\n                              !booking.OTCCharges || booking.OTCCharges === 0\n                                ? classes.infoDataChargesHigher\n                                : classes.infoDataCharges\n                            }\n                          >{`£${(\n                            booking.deposit + booking.OTCCharges\n                          ).toLocaleString(\"en-GB\")}`}</span>\n                        </div>\n                      </li> */}\n                    </ul>\n                  </div>\n                </Grid>\n              </div>\n              <Backdrop\n                className={classes.backdrop}\n                open={saving || deleting || restoring}\n              >\n                <CircularProgress color=\"inherit\" />\n              </Backdrop>\n            </DialogContent>\n\n            <PayDialog\n              booking={selectedBooking}\n              open={openPayDialog}\n              price={invoice ? invoice.grandTotal : null}\n              handleClose={handleClosePayDialog}\n            />\n\n            <InvoiceDialog\n              booking={selectedBooking}\n              invoice={invoice}\n              open={openInvoiceDialog}\n              handleClose={handleCloseInvoiceDialog}\n            />\n          </Dialog>\n\n          <Dialog\n            open={openUndoPayDialog}\n            onClose={handleCloseUndoPayDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Undo Payment\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to undo payment for this booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseUndoPayDialog} color=\"default\">\n                Back\n              </Button>\n              <Button onClick={undoPaymentClicked} color=\"secondary\" autoFocus>\n                Yes, Undo Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n            open={openRefundDialog}\n            onClose={handleCloseRefundDialog}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle style={{ color: \"#999\" }} id=\"alert-dialog-title\">\n              {\"Refund Deposit\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText\n                style={{ color: \"#333\", fontWeight: \"400\" }}\n                id=\"alert-dialog-description\"\n              >\n                Are you sure you want to refund deposit payment for this\n                booking?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleCloseRefundDialog} color=\"default\">\n                Back\n              </Button>\n              <Button\n                onClick={refundPaymentClicked}\n                color=\"secondary\"\n                autoFocus\n              >\n                Yes, Refund Payment\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/calendar-admin/DayViewCell.js",["345","346","347","348","349"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/calendar-admin/MonthViewCell.js",["350","351","352"],"import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport dateformat from 'dateformat';\nimport BookService from '../services/BookService';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport GlobalState from '../../GlobalState';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    Container: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fff\",\n        cursor: \"pointer\"\n    },\n\n    ContainerPast: {\n        width: \"100%\",\n        paddingTop: \"70%\",\n        position: \"relative\",\n        backgroundColor: \"#fafafa\"\n    },\n    \n    DayLabel: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#555\",\n        fontSize: \"1rem\"\n    },\n\n    DayLabelToday: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        backgroundColor: \"#1a73e8\",\n        color: \"#fff\",\n        fontSize: \"1rem\",\n        borderRadius: \"50%\",\n        padding: \"5px\",\n        lineHight: \"35px\",\n        minWidth: \"35px\"\n    },\n\n    DayLabelDisabled: {\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        color: \"#ddd\",\n        fontSize: \"1rem\"\n    },\n\n    BookingCountLabel: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#3f51b5\",\n        backgroundColor: \"#ebedf7\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        lineHight: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    BookingCountLabelBusy: {\n        position: \"absolute\",\n        top: \"35%\",\n        left: \"40%\",\n        color: \"#b00000\",\n        backgroundColor: \"#fce6e6\",\n        fontSize: \"16px\",\n        fontWeight: \"600\",\n        padding: \"10px\",\n        borderRadius: \"50%\",\n        minWidth: \"40px\",\n        cursor: \"pointer\",\n        textAlign: \"center\"\n    },\n\n    LoadingProgress: {\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n      },\n\n      BookingCountGauge: {\n        position: \"absolute\",\n        bottom: \"5%\",\n        left: \"8%\",\n        width : \"8%\",\n        height: \"85%\"\n    },\n\n  }));\n\nconst MAX_BOOKING_COUNT = 10;  \n\nconst MonthViewCell = ({key, cellIndex, month, daysInMonth, dayClicked}) => {\n    const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n\n    const [dateStr, setDateStr] = React.useState('');\n\n    const [cellDate, setCellDate] = React.useState(new Date());\n\n    const [bookingsCount, setBookingsCount] = React.useState(-1);\n\n    const [disableDay, setDisableDay] = React.useState(false);\n\n    const [isPast, setIsPast] = React.useState(false);\n\n    useEffect( () => {\n\n        if (cellIndex <= daysInMonth.length)\n        {\n            const date = daysInMonth[cellIndex - 1];\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(date.getMonth() !== month - 1);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n        else\n        {\n            const day = cellIndex - daysInMonth.length;\n            const date = new Date((daysInMonth[daysInMonth.length - 1].getTime() + ( day * 86400000)));\n            const dateStr = dateformat(date, 'yyyy-mm-dd');\n            setDateStr(dateStr);\n            setCellDate(date);\n            setDisableDay(true);\n            const todayStr = dateformat(new Date(), 'yyyy-mm-dd');\n            setIsPast(dateStr < todayStr);\n        }\n\n    }, [cellIndex, month, daysInMonth]);\n\n    useEffect ( () => {\n\n        const fecthData = async () =>\n        {\n            if (!dateStr || dateStr.length <= 0)\n            {\n                return;\n            }\n        \n            if (disableDay)\n            {\n                setBookingsCount(-2);\n                return;\n            }\n\n            setBookingsCount(-1);\n\n            var res = state.AdminCalendarCache?.find(record => record.method === 'getBookingsCountByDateStr' && record.query === dateStr)?.res;\n\n            if (!res)\n            {\n                res = await BookService.getAllBookingsCountByDateStr(dateStr);\n                setState(state => ({...state, AdminCalendarCache : [...state.AdminCalendarCache, {method: 'getBookingsCountByDateStr' , query : dateStr, res: res}]}));\n            }\n        \n            if (res.data.count >= 0)\n            {\n                setBookingsCount(res.data.count);\n            }\n\n        }\n\n      fecthData();\n\n    }, [dateStr]);\n\n    const getDayLabel = (_cellIndex , _month , _daysInMonth) =>\n    {\n        var date = null;\n        var disabled = false;\n        var day = -1;\n\n    \n\n        if (_cellIndex <= _daysInMonth.length)\n        {\n            date = _daysInMonth[_cellIndex - 1];\n            day = date.getDate();\n            if (date.getMonth() !== _month - 1)\n            {\n                disabled = true;\n            }\n        }\n        else\n        {\n            const _day = _cellIndex - _daysInMonth.length;\n            const date = new Date((_daysInMonth[_daysInMonth.length - 1].getTime() + ( _day * 86400000)));\n            day = date.getDate();\n            disabled = true;\n        }\n\n        const isToday = dateformat(new Date(),'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd');\n\n        return (\n            <span className={(disabled) ? classes.DayLabelDisabled : isToday ? classes.DayLabelToday : classes.DayLabel}>\n                 {day > 0 ? `${day}` : ''}\n             </span>\n        );\n    }\n\n    const getBookingsCountLabel = (_bookingsCount) =>\n    {\n        if (_bookingsCount === -1)\n        {\n            return (\n                <div className={classes.LoadingProgress}>\n                      <CircularProgress disableShrink  />\n                </div>\n            );  \n        }\n        else if (_bookingsCount > 0 )\n        {\n            if (_bookingsCount >= MAX_BOOKING_COUNT / 2)\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabelBusy}>\n                        {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div onClick={(event => dayClicked(event,cellDate))} className={classes.BookingCountLabel}>\n                          {_bookingsCount < 10 ?  ` ${_bookingsCount}` : `${_bookingsCount}`}\n                    </div>\n                );\n            }\n        }\n    }\n\n    const getBookingsCountGauge = (_bookingsCount) =>\n    {\n        if (_bookingsCount > 0)\n        {\n            let percent = (_bookingsCount / MAX_BOOKING_COUNT) * 100;\n            if (percent > 100)\n            {\n                percent = 100;\n            }\n\n            percent = 100 - percent;\n\n            return (\n\n                <div className={classes.BookingCountGauge}>\n                  <div style={{padding:\"0\", margin:\"0\", width:\"100%\", height:\"100%\", backgroundColor: \"#3f51b5\"}} >\n                        <div  style={{padding:\"0\", margin:\"0\", width:\"100%\", height:`${percent}%`, backgroundColor: \"#fafafa\"}} >\n\n                        </div>\n                  </div>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.Container}  onClick={(event => dayClicked(event,cellDate))} >\n\n              {getDayLabel(cellIndex, month, daysInMonth)}\n\n              {getBookingsCountLabel(bookingsCount)}\n\n              {getBookingsCountGauge(bookingsCount)}\n\n            </div>\n\n        </React.Fragment>\n\n\n    );\n}\n\nMonthViewCell.propTypes = {\n    key: PropTypes.string.isRequired,\n    cellIndex: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    daysInMonth: PropTypes.arrayOf(PropTypes.date),\n    dayClicked: PropTypes.func\n  };\n\n \n  \nexport default MonthViewCell;","/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/calendar-admin/DayViewCell.js",["353","354","355","356","357"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/NewBookingDialog.js",["358","359","360","361","362","363","364","365","366","367","368","369","370","371","372"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/index.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/MenuList.js",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/services/api.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/CopyRight.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/services/BookService.js",["394"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/calendar-admin/WeekView.js",["395","396"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/FindByRef.js",["397","398","399","400","401"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/BookingTable.js",["402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/BookingTable.js",["416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/BookingView.js",["432","433","434","435"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/Corporates.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/WeekView.js",["436","437"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/MonthViewCell.js",["438","439","440"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/TimeStampDialog.js",["441","442","443","444","445","446","447","448","449","450","451","452"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/CurrentVisits.js",["453","454"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/PriceCalculator.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/CurrentVisits.js",["455","456","457","458"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/BookingDialog.js",["459","460","461","462","463","464","465","466","467","468","469","470"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/serviceWorker.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/calendar-admin/CalendarView.js",["471","472","473"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/BookingView.js",["474","475","476","477"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/services/api.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/InvoiceDialog.js",["478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/calendar-admin/WeekViewCell.js",["496","497"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/CurrentVisits.js",["498","499"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Dentist/Corporates.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/STD/BookingTable.js",["500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/UnmatchedRecords.js",["514","515","516","517","518","519","520","521","522","523","524"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/OV/EditOVBookingDialog.js",["525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/services/BookService.js",["549"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/PriceCalculator.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/Chart.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/Gynae/PayDialog.js",["550","551","552","553","554","555","556","557","558"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/PCR/calendar-admin/DayViewCell.js",["559","560","561","562","563"],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/services/PDFService.js",[],"/Users/mohammadnoori/Desktop/medex/dentist-booking-admin/src/GP/NewBookingDialog.js",["564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585"],{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"590","severity":1,"message":"591","line":157,"column":8,"nodeType":"592","endLine":157,"endColumn":20,"suggestions":"593"},{"ruleId":"586","severity":1,"message":"594","line":7,"column":3,"nodeType":"588","messageId":"589","endLine":7,"endColumn":8},{"ruleId":"586","severity":1,"message":"595","line":8,"column":3,"nodeType":"588","messageId":"589","endLine":8,"endColumn":10},{"ruleId":"586","severity":1,"message":"596","line":10,"column":3,"nodeType":"588","messageId":"589","endLine":10,"endColumn":13},{"ruleId":"586","severity":1,"message":"597","line":11,"column":3,"nodeType":"588","messageId":"589","endLine":11,"endColumn":15},{"ruleId":"586","severity":1,"message":"598","line":12,"column":3,"nodeType":"588","messageId":"589","endLine":12,"endColumn":10},{"ruleId":"586","severity":1,"message":"599","line":15,"column":16,"nodeType":"588","messageId":"589","endLine":15,"endColumn":24},{"ruleId":"586","severity":1,"message":"600","line":17,"column":8,"nodeType":"588","messageId":"589","endLine":17,"endColumn":20},{"ruleId":"586","severity":1,"message":"601","line":19,"column":10,"nodeType":"588","messageId":"589","endLine":19,"endColumn":16},{"ruleId":"586","severity":1,"message":"602","line":19,"column":18,"nodeType":"588","messageId":"589","endLine":19,"endColumn":30},{"ruleId":"590","severity":1,"message":"603","line":96,"column":6,"nodeType":"592","endLine":96,"endColumn":62,"suggestions":"604"},{"ruleId":"586","severity":1,"message":"605","line":4,"column":28,"nodeType":"588","messageId":"589","endLine":4,"endColumn":44},{"ruleId":"586","severity":1,"message":"606","line":4,"column":128,"nodeType":"588","messageId":"589","endLine":4,"endColumn":132},{"ruleId":"586","severity":1,"message":"607","line":4,"column":162,"nodeType":"588","messageId":"589","endLine":4,"endColumn":166},{"ruleId":"586","severity":1,"message":"608","line":4,"column":205,"nodeType":"588","messageId":"589","endLine":4,"endColumn":212},{"ruleId":"586","severity":1,"message":"609","line":7,"column":8,"nodeType":"588","messageId":"589","endLine":7,"endColumn":17},{"ruleId":"586","severity":1,"message":"610","line":8,"column":8,"nodeType":"588","messageId":"589","endLine":8,"endColumn":17},{"ruleId":"586","severity":1,"message":"611","line":10,"column":10,"nodeType":"588","messageId":"589","endLine":10,"endColumn":22},{"ruleId":"586","severity":1,"message":"612","line":11,"column":31,"nodeType":"588","messageId":"589","endLine":11,"endColumn":60},{"ruleId":"586","severity":1,"message":"613","line":35,"column":3,"nodeType":"588","messageId":"589","endLine":35,"endColumn":21},{"ruleId":"586","severity":1,"message":"614","line":39,"column":8,"nodeType":"588","messageId":"589","endLine":39,"endColumn":20},{"ruleId":"586","severity":1,"message":"615","line":40,"column":8,"nodeType":"588","messageId":"589","endLine":40,"endColumn":22},{"ruleId":"586","severity":1,"message":"616","line":41,"column":8,"nodeType":"588","messageId":"589","endLine":41,"endColumn":20},{"ruleId":"586","severity":1,"message":"617","line":540,"column":17,"nodeType":"588","messageId":"589","endLine":540,"endColumn":25},{"ruleId":"586","severity":1,"message":"618","line":544,"column":10,"nodeType":"588","messageId":"589","endLine":544,"endColumn":21},{"ruleId":"586","severity":1,"message":"619","line":559,"column":9,"nodeType":"588","messageId":"589","endLine":559,"endColumn":20},{"ruleId":"586","severity":1,"message":"620","line":600,"column":11,"nodeType":"588","messageId":"589","endLine":600,"endColumn":25},{"ruleId":"590","severity":1,"message":"621","line":634,"column":9,"nodeType":"592","endLine":634,"endColumn":21,"suggestions":"622"},{"ruleId":"590","severity":1,"message":"623","line":656,"column":7,"nodeType":"592","endLine":656,"endColumn":15,"suggestions":"624"},{"ruleId":"590","severity":1,"message":"625","line":663,"column":10,"nodeType":"592","endLine":663,"endColumn":42,"suggestions":"626"},{"ruleId":"627","replacedBy":"628"},{"ruleId":"629","replacedBy":"630"},{"ruleId":"586","severity":1,"message":"631","line":10,"column":18,"nodeType":"588","messageId":"589","endLine":10,"endColumn":26},{"ruleId":"586","severity":1,"message":"632","line":10,"column":28,"nodeType":"588","messageId":"589","endLine":10,"endColumn":44},{"ruleId":"586","severity":1,"message":"607","line":10,"column":46,"nodeType":"588","messageId":"589","endLine":10,"endColumn":50},{"ruleId":"586","severity":1,"message":"633","line":11,"column":8,"nodeType":"588","messageId":"589","endLine":11,"endColumn":18},{"ruleId":"586","severity":1,"message":"634","line":13,"column":9,"nodeType":"588","messageId":"589","endLine":13,"endColumn":23},{"ruleId":"586","severity":1,"message":"609","line":17,"column":8,"nodeType":"588","messageId":"589","endLine":17,"endColumn":17},{"ruleId":"586","severity":1,"message":"610","line":18,"column":8,"nodeType":"588","messageId":"589","endLine":18,"endColumn":17},{"ruleId":"586","severity":1,"message":"635","line":23,"column":8,"nodeType":"588","messageId":"589","endLine":23,"endColumn":17},{"ruleId":"586","severity":1,"message":"636","line":583,"column":10,"nodeType":"588","messageId":"589","endLine":583,"endColumn":33},{"ruleId":"586","severity":1,"message":"631","line":7,"column":3,"nodeType":"588","messageId":"589","endLine":7,"endColumn":11},{"ruleId":"586","severity":1,"message":"637","line":9,"column":3,"nodeType":"588","messageId":"589","endLine":9,"endColumn":20},{"ruleId":"586","severity":1,"message":"632","line":11,"column":3,"nodeType":"588","messageId":"589","endLine":11,"endColumn":19},{"ruleId":"586","severity":1,"message":"596","line":12,"column":3,"nodeType":"588","messageId":"589","endLine":12,"endColumn":13},{"ruleId":"586","severity":1,"message":"634","line":18,"column":10,"nodeType":"588","messageId":"589","endLine":18,"endColumn":24},{"ruleId":"586","severity":1,"message":"609","line":21,"column":8,"nodeType":"588","messageId":"589","endLine":21,"endColumn":17},{"ruleId":"586","severity":1,"message":"610","line":22,"column":8,"nodeType":"588","messageId":"589","endLine":22,"endColumn":17},{"ruleId":"586","severity":1,"message":"638","line":41,"column":8,"nodeType":"588","messageId":"589","endLine":41,"endColumn":17},{"ruleId":"586","severity":1,"message":"635","line":43,"column":8,"nodeType":"588","messageId":"589","endLine":43,"endColumn":17},{"ruleId":"586","severity":1,"message":"639","line":44,"column":8,"nodeType":"588","messageId":"589","endLine":44,"endColumn":16},{"ruleId":"586","severity":1,"message":"640","line":46,"column":8,"nodeType":"588","messageId":"589","endLine":46,"endColumn":16},{"ruleId":"586","severity":1,"message":"641","line":48,"column":8,"nodeType":"588","messageId":"589","endLine":48,"endColumn":19},{"ruleId":"586","severity":1,"message":"642","line":50,"column":8,"nodeType":"588","messageId":"589","endLine":50,"endColumn":28},{"ruleId":"586","severity":1,"message":"643","line":51,"column":10,"nodeType":"588","messageId":"589","endLine":51,"endColumn":24},{"ruleId":"586","severity":1,"message":"644","line":52,"column":8,"nodeType":"588","messageId":"589","endLine":52,"endColumn":21},{"ruleId":"586","severity":1,"message":"645","line":399,"column":10,"nodeType":"588","messageId":"589","endLine":399,"endColumn":16},{"ruleId":"586","severity":1,"message":"646","line":399,"column":18,"nodeType":"588","messageId":"589","endLine":399,"endColumn":27},{"ruleId":"586","severity":1,"message":"647","line":401,"column":10,"nodeType":"588","messageId":"589","endLine":401,"endColumn":19},{"ruleId":"586","severity":1,"message":"648","line":402,"column":10,"nodeType":"588","messageId":"589","endLine":402,"endColumn":26},{"ruleId":"586","severity":1,"message":"649","line":404,"column":10,"nodeType":"588","messageId":"589","endLine":404,"endColumn":26},{"ruleId":"586","severity":1,"message":"650","line":404,"column":28,"nodeType":"588","messageId":"589","endLine":404,"endColumn":47},{"ruleId":"586","severity":1,"message":"651","line":405,"column":10,"nodeType":"588","messageId":"589","endLine":405,"endColumn":23},{"ruleId":"586","severity":1,"message":"652","line":406,"column":10,"nodeType":"588","messageId":"589","endLine":406,"endColumn":26},{"ruleId":"586","severity":1,"message":"653","line":408,"column":10,"nodeType":"588","messageId":"589","endLine":408,"endColumn":27},{"ruleId":"586","severity":1,"message":"654","line":410,"column":10,"nodeType":"588","messageId":"589","endLine":410,"endColumn":25},{"ruleId":"586","severity":1,"message":"655","line":441,"column":10,"nodeType":"588","messageId":"589","endLine":441,"endColumn":23},{"ruleId":"586","severity":1,"message":"656","line":445,"column":10,"nodeType":"588","messageId":"589","endLine":445,"endColumn":27},{"ruleId":"586","severity":1,"message":"657","line":447,"column":10,"nodeType":"588","messageId":"589","endLine":447,"endColumn":29},{"ruleId":"586","severity":1,"message":"658","line":447,"column":31,"nodeType":"588","messageId":"589","endLine":447,"endColumn":53},{"ruleId":"586","severity":1,"message":"659","line":450,"column":10,"nodeType":"588","messageId":"589","endLine":450,"endColumn":23},{"ruleId":"586","severity":1,"message":"660","line":450,"column":25,"nodeType":"588","messageId":"589","endLine":450,"endColumn":41},{"ruleId":"586","severity":1,"message":"661","line":488,"column":9,"nodeType":"588","messageId":"589","endLine":488,"endColumn":23},{"ruleId":"586","severity":1,"message":"662","line":493,"column":9,"nodeType":"588","messageId":"589","endLine":493,"endColumn":21},{"ruleId":"586","severity":1,"message":"663","line":498,"column":9,"nodeType":"588","messageId":"589","endLine":498,"endColumn":23},{"ruleId":"586","severity":1,"message":"664","line":510,"column":9,"nodeType":"588","messageId":"589","endLine":510,"endColumn":30},{"ruleId":"586","severity":1,"message":"636","line":690,"column":9,"nodeType":"588","messageId":"589","endLine":690,"endColumn":32},{"ruleId":"586","severity":1,"message":"665","line":703,"column":9,"nodeType":"588","messageId":"589","endLine":703,"endColumn":32},{"ruleId":"586","severity":1,"message":"666","line":716,"column":9,"nodeType":"588","messageId":"589","endLine":716,"endColumn":12},{"ruleId":"586","severity":1,"message":"667","line":721,"column":9,"nodeType":"588","messageId":"589","endLine":721,"endColumn":26},{"ruleId":"590","severity":1,"message":"668","line":744,"column":6,"nodeType":"592","endLine":744,"endColumn":44,"suggestions":"669"},{"ruleId":"586","severity":1,"message":"670","line":752,"column":9,"nodeType":"588","messageId":"589","endLine":752,"endColumn":27},{"ruleId":"586","severity":1,"message":"671","line":766,"column":9,"nodeType":"588","messageId":"589","endLine":766,"endColumn":29},{"ruleId":"586","severity":1,"message":"672","line":792,"column":9,"nodeType":"588","messageId":"589","endLine":792,"endColumn":24},{"ruleId":"586","severity":1,"message":"673","line":805,"column":9,"nodeType":"588","messageId":"589","endLine":805,"endColumn":24},{"ruleId":"586","severity":1,"message":"674","line":818,"column":9,"nodeType":"588","messageId":"589","endLine":818,"endColumn":20},{"ruleId":"586","severity":1,"message":"675","line":834,"column":9,"nodeType":"588","messageId":"589","endLine":834,"endColumn":25},{"ruleId":"627","replacedBy":"676"},{"ruleId":"629","replacedBy":"677"},{"ruleId":"586","severity":1,"message":"678","line":1,"column":17,"nodeType":"588","messageId":"589","endLine":1,"endColumn":26},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"631","line":7,"column":3,"nodeType":"588","messageId":"589","endLine":7,"endColumn":11},{"ruleId":"586","severity":1,"message":"632","line":11,"column":3,"nodeType":"588","messageId":"589","endLine":11,"endColumn":19},{"ruleId":"586","severity":1,"message":"634","line":18,"column":10,"nodeType":"588","messageId":"589","endLine":18,"endColumn":24},{"ruleId":"586","severity":1,"message":"610","line":22,"column":8,"nodeType":"588","messageId":"589","endLine":22,"endColumn":17},{"ruleId":"586","severity":1,"message":"641","line":48,"column":8,"nodeType":"588","messageId":"589","endLine":48,"endColumn":19},{"ruleId":"586","severity":1,"message":"649","line":378,"column":10,"nodeType":"588","messageId":"589","endLine":378,"endColumn":26},{"ruleId":"586","severity":1,"message":"657","line":421,"column":10,"nodeType":"588","messageId":"589","endLine":421,"endColumn":29},{"ruleId":"590","severity":1,"message":"679","line":442,"column":6,"nodeType":"592","endLine":442,"endColumn":33,"suggestions":"680"},{"ruleId":"586","severity":1,"message":"681","line":444,"column":9,"nodeType":"588","messageId":"589","endLine":444,"endColumn":35},{"ruleId":"586","severity":1,"message":"682","line":454,"column":9,"nodeType":"588","messageId":"589","endLine":454,"endColumn":32},{"ruleId":"590","severity":1,"message":"683","line":487,"column":6,"nodeType":"592","endLine":487,"endColumn":20,"suggestions":"684"},{"ruleId":"586","severity":1,"message":"661","line":525,"column":9,"nodeType":"588","messageId":"589","endLine":525,"endColumn":23},{"ruleId":"590","severity":1,"message":"668","line":781,"column":6,"nodeType":"592","endLine":781,"endColumn":44,"suggestions":"685"},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"686","line":179,"column":10,"nodeType":"588","messageId":"589","endLine":179,"endColumn":17},{"ruleId":"586","severity":1,"message":"687","line":179,"column":19,"nodeType":"588","messageId":"589","endLine":179,"endColumn":29},{"ruleId":"586","severity":1,"message":"688","line":181,"column":10,"nodeType":"588","messageId":"589","endLine":181,"endColumn":16},{"ruleId":"590","severity":1,"message":"689","line":281,"column":6,"nodeType":"592","endLine":281,"endColumn":50,"suggestions":"690"},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"688","line":120,"column":12,"nodeType":"588","messageId":"589","endLine":120,"endColumn":18},{"ruleId":"590","severity":1,"message":"691","line":182,"column":8,"nodeType":"592","endLine":182,"endColumn":17,"suggestions":"692"},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"686","line":186,"column":12,"nodeType":"588","messageId":"589","endLine":186,"endColumn":19},{"ruleId":"586","severity":1,"message":"687","line":186,"column":21,"nodeType":"588","messageId":"589","endLine":186,"endColumn":31},{"ruleId":"586","severity":1,"message":"688","line":188,"column":12,"nodeType":"588","messageId":"589","endLine":188,"endColumn":18},{"ruleId":"590","severity":1,"message":"689","line":265,"column":8,"nodeType":"592","endLine":265,"endColumn":52,"suggestions":"693"},{"ruleId":"586","severity":1,"message":"678","line":1,"column":17,"nodeType":"588","messageId":"589","endLine":1,"endColumn":26},{"ruleId":"586","severity":1,"message":"694","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":34},{"ruleId":"586","severity":1,"message":"695","line":12,"column":3,"nodeType":"588","messageId":"589","endLine":12,"endColumn":17},{"ruleId":"586","severity":1,"message":"607","line":14,"column":3,"nodeType":"588","messageId":"589","endLine":14,"endColumn":7},{"ruleId":"586","severity":1,"message":"696","line":18,"column":3,"nodeType":"588","messageId":"589","endLine":18,"endColumn":9},{"ruleId":"586","severity":1,"message":"598","line":20,"column":3,"nodeType":"588","messageId":"589","endLine":20,"endColumn":10},{"ruleId":"586","severity":1,"message":"615","line":25,"column":8,"nodeType":"588","messageId":"589","endLine":25,"endColumn":22},{"ruleId":"586","severity":1,"message":"697","line":34,"column":8,"nodeType":"588","messageId":"589","endLine":34,"endColumn":13},{"ruleId":"586","severity":1,"message":"698","line":40,"column":8,"nodeType":"588","messageId":"589","endLine":40,"endColumn":13},{"ruleId":"586","severity":1,"message":"699","line":41,"column":8,"nodeType":"588","messageId":"589","endLine":41,"endColumn":18},{"ruleId":"586","severity":1,"message":"700","line":43,"column":8,"nodeType":"588","messageId":"589","endLine":43,"endColumn":17},{"ruleId":"586","severity":1,"message":"701","line":44,"column":10,"nodeType":"588","messageId":"589","endLine":44,"endColumn":20},{"ruleId":"586","severity":1,"message":"702","line":48,"column":10,"nodeType":"588","messageId":"589","endLine":48,"endColumn":18},{"ruleId":"586","severity":1,"message":"703","line":52,"column":5,"nodeType":"588","messageId":"589","endLine":52,"endColumn":13},{"ruleId":"586","severity":1,"message":"704","line":317,"column":10,"nodeType":"588","messageId":"589","endLine":317,"endColumn":15},{"ruleId":"586","severity":1,"message":"705","line":15,"column":8,"nodeType":"588","messageId":"589","endLine":15,"endColumn":21},{"ruleId":"586","severity":1,"message":"706","line":21,"column":8,"nodeType":"588","messageId":"589","endLine":21,"endColumn":17},{"ruleId":"586","severity":1,"message":"707","line":22,"column":8,"nodeType":"588","messageId":"589","endLine":22,"endColumn":20},{"ruleId":"586","severity":1,"message":"708","line":23,"column":8,"nodeType":"588","messageId":"589","endLine":23,"endColumn":24},{"ruleId":"586","severity":1,"message":"709","line":24,"column":8,"nodeType":"588","messageId":"589","endLine":24,"endColumn":24},{"ruleId":"586","severity":1,"message":"710","line":26,"column":8,"nodeType":"588","messageId":"589","endLine":26,"endColumn":23},{"ruleId":"586","severity":1,"message":"711","line":30,"column":8,"nodeType":"588","messageId":"589","endLine":30,"endColumn":25},{"ruleId":"586","severity":1,"message":"712","line":31,"column":8,"nodeType":"588","messageId":"589","endLine":31,"endColumn":29},{"ruleId":"586","severity":1,"message":"713","line":32,"column":8,"nodeType":"588","messageId":"589","endLine":32,"endColumn":22},{"ruleId":"586","severity":1,"message":"714","line":33,"column":8,"nodeType":"588","messageId":"589","endLine":33,"endColumn":25},{"ruleId":"586","severity":1,"message":"715","line":37,"column":8,"nodeType":"588","messageId":"589","endLine":37,"endColumn":22},{"ruleId":"586","severity":1,"message":"716","line":38,"column":8,"nodeType":"588","messageId":"589","endLine":38,"endColumn":26},{"ruleId":"586","severity":1,"message":"717","line":39,"column":8,"nodeType":"588","messageId":"589","endLine":39,"endColumn":19},{"ruleId":"586","severity":1,"message":"718","line":40,"column":8,"nodeType":"588","messageId":"589","endLine":40,"endColumn":22},{"ruleId":"586","severity":1,"message":"719","line":44,"column":8,"nodeType":"588","messageId":"589","endLine":44,"endColumn":23},{"ruleId":"586","severity":1,"message":"720","line":45,"column":8,"nodeType":"588","messageId":"589","endLine":45,"endColumn":27},{"ruleId":"586","severity":1,"message":"721","line":46,"column":8,"nodeType":"588","messageId":"589","endLine":46,"endColumn":20},{"ruleId":"586","severity":1,"message":"722","line":47,"column":8,"nodeType":"588","messageId":"589","endLine":47,"endColumn":23},{"ruleId":"586","severity":1,"message":"723","line":51,"column":8,"nodeType":"588","messageId":"589","endLine":51,"endColumn":22},{"ruleId":"586","severity":1,"message":"724","line":52,"column":8,"nodeType":"588","messageId":"589","endLine":52,"endColumn":22},{"ruleId":"586","severity":1,"message":"725","line":53,"column":8,"nodeType":"588","messageId":"589","endLine":53,"endColumn":21},{"ruleId":"586","severity":1,"message":"726","line":2,"column":8,"nodeType":"588","messageId":"589","endLine":2,"endColumn":18},{"ruleId":"586","severity":1,"message":"678","line":1,"column":17,"nodeType":"588","messageId":"589","endLine":1,"endColumn":26},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"727","line":11,"column":29,"nodeType":"588","messageId":"589","endLine":11,"endColumn":34},{"ruleId":"586","severity":1,"message":"728","line":11,"column":36,"nodeType":"588","messageId":"589","endLine":11,"endColumn":46},{"ruleId":"586","severity":1,"message":"729","line":14,"column":10,"nodeType":"588","messageId":"589","endLine":14,"endColumn":15},{"ruleId":"590","severity":1,"message":"730","line":134,"column":5,"nodeType":"592","endLine":134,"endColumn":7,"suggestions":"731"},{"ruleId":"590","severity":1,"message":"732","line":144,"column":8,"nodeType":"592","endLine":144,"endColumn":33,"suggestions":"733"},{"ruleId":"586","severity":1,"message":"605","line":4,"column":28,"nodeType":"588","messageId":"589","endLine":4,"endColumn":44},{"ruleId":"586","severity":1,"message":"606","line":4,"column":128,"nodeType":"588","messageId":"589","endLine":4,"endColumn":132},{"ruleId":"586","severity":1,"message":"608","line":4,"column":205,"nodeType":"588","messageId":"589","endLine":4,"endColumn":212},{"ruleId":"586","severity":1,"message":"609","line":7,"column":8,"nodeType":"588","messageId":"589","endLine":7,"endColumn":17},{"ruleId":"586","severity":1,"message":"611","line":10,"column":10,"nodeType":"588","messageId":"589","endLine":10,"endColumn":22},{"ruleId":"586","severity":1,"message":"612","line":11,"column":31,"nodeType":"588","messageId":"589","endLine":11,"endColumn":60},{"ruleId":"586","severity":1,"message":"613","line":35,"column":3,"nodeType":"588","messageId":"589","endLine":35,"endColumn":21},{"ruleId":"586","severity":1,"message":"617","line":635,"column":17,"nodeType":"588","messageId":"589","endLine":635,"endColumn":25},{"ruleId":"586","severity":1,"message":"618","line":639,"column":10,"nodeType":"588","messageId":"589","endLine":639,"endColumn":21},{"ruleId":"586","severity":1,"message":"619","line":654,"column":9,"nodeType":"588","messageId":"589","endLine":654,"endColumn":20},{"ruleId":"586","severity":1,"message":"620","line":695,"column":11,"nodeType":"588","messageId":"589","endLine":695,"endColumn":25},{"ruleId":"590","severity":1,"message":"621","line":729,"column":9,"nodeType":"592","endLine":729,"endColumn":21,"suggestions":"734"},{"ruleId":"590","severity":1,"message":"623","line":753,"column":7,"nodeType":"592","endLine":753,"endColumn":15,"suggestions":"735"},{"ruleId":"590","severity":1,"message":"625","line":760,"column":10,"nodeType":"592","endLine":760,"endColumn":42,"suggestions":"736"},{"ruleId":"586","severity":1,"message":"605","line":4,"column":28,"nodeType":"588","messageId":"589","endLine":4,"endColumn":44},{"ruleId":"586","severity":1,"message":"606","line":4,"column":128,"nodeType":"588","messageId":"589","endLine":4,"endColumn":132},{"ruleId":"586","severity":1,"message":"608","line":4,"column":205,"nodeType":"588","messageId":"589","endLine":4,"endColumn":212},{"ruleId":"586","severity":1,"message":"611","line":10,"column":10,"nodeType":"588","messageId":"589","endLine":10,"endColumn":22},{"ruleId":"586","severity":1,"message":"612","line":11,"column":31,"nodeType":"588","messageId":"589","endLine":11,"endColumn":60},{"ruleId":"586","severity":1,"message":"737","line":34,"column":8,"nodeType":"588","messageId":"589","endLine":34,"endColumn":19},{"ruleId":"586","severity":1,"message":"738","line":35,"column":8,"nodeType":"588","messageId":"589","endLine":35,"endColumn":14},{"ruleId":"586","severity":1,"message":"613","line":39,"column":3,"nodeType":"588","messageId":"589","endLine":39,"endColumn":21},{"ruleId":"586","severity":1,"message":"617","line":740,"column":17,"nodeType":"588","messageId":"589","endLine":740,"endColumn":25},{"ruleId":"586","severity":1,"message":"618","line":744,"column":10,"nodeType":"588","messageId":"589","endLine":744,"endColumn":21},{"ruleId":"586","severity":1,"message":"739","line":749,"column":9,"nodeType":"588","messageId":"589","endLine":749,"endColumn":22},{"ruleId":"586","severity":1,"message":"619","line":763,"column":9,"nodeType":"588","messageId":"589","endLine":763,"endColumn":20},{"ruleId":"586","severity":1,"message":"620","line":822,"column":11,"nodeType":"588","messageId":"589","endLine":822,"endColumn":25},{"ruleId":"590","severity":1,"message":"621","line":856,"column":9,"nodeType":"592","endLine":856,"endColumn":21,"suggestions":"740"},{"ruleId":"590","severity":1,"message":"623","line":879,"column":7,"nodeType":"592","endLine":879,"endColumn":15,"suggestions":"741"},{"ruleId":"590","severity":1,"message":"625","line":886,"column":10,"nodeType":"592","endLine":886,"endColumn":42,"suggestions":"742"},{"ruleId":"586","severity":1,"message":"612","line":14,"column":31,"nodeType":"588","messageId":"589","endLine":14,"endColumn":60},{"ruleId":"586","severity":1,"message":"704","line":26,"column":10,"nodeType":"588","messageId":"589","endLine":26,"endColumn":15},{"ruleId":"590","severity":1,"message":"621","line":58,"column":9,"nodeType":"592","endLine":58,"endColumn":18,"suggestions":"743"},{"ruleId":"590","severity":1,"message":"621","line":72,"column":7,"nodeType":"592","endLine":72,"endColumn":9,"suggestions":"744"},{"ruleId":"586","severity":1,"message":"678","line":1,"column":17,"nodeType":"588","messageId":"589","endLine":1,"endColumn":26},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"688","line":118,"column":12,"nodeType":"588","messageId":"589","endLine":118,"endColumn":18},{"ruleId":"590","severity":1,"message":"691","line":180,"column":8,"nodeType":"592","endLine":180,"endColumn":17,"suggestions":"745"},{"ruleId":"586","severity":1,"message":"694","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":34},{"ruleId":"586","severity":1,"message":"587","line":1,"column":36,"nodeType":"588","messageId":"589","endLine":1,"endColumn":44},{"ruleId":"586","severity":1,"message":"746","line":3,"column":8,"nodeType":"588","messageId":"589","endLine":3,"endColumn":18},{"ruleId":"586","severity":1,"message":"631","line":6,"column":3,"nodeType":"588","messageId":"589","endLine":6,"endColumn":11},{"ruleId":"586","severity":1,"message":"632","line":9,"column":3,"nodeType":"588","messageId":"589","endLine":9,"endColumn":19},{"ruleId":"586","severity":1,"message":"607","line":11,"column":3,"nodeType":"588","messageId":"589","endLine":11,"endColumn":7},{"ruleId":"586","severity":1,"message":"747","line":13,"column":3,"nodeType":"588","messageId":"589","endLine":13,"endColumn":12},{"ruleId":"586","severity":1,"message":"598","line":14,"column":3,"nodeType":"588","messageId":"589","endLine":14,"endColumn":10},{"ruleId":"586","severity":1,"message":"748","line":17,"column":10,"nodeType":"588","messageId":"589","endLine":17,"endColumn":20},{"ruleId":"586","severity":1,"message":"640","line":19,"column":8,"nodeType":"588","messageId":"589","endLine":19,"endColumn":16},{"ruleId":"586","severity":1,"message":"704","line":191,"column":10,"nodeType":"588","messageId":"589","endLine":191,"endColumn":15},{"ruleId":"586","severity":1,"message":"617","line":191,"column":17,"nodeType":"588","messageId":"589","endLine":191,"endColumn":25},{"ruleId":"586","severity":1,"message":"607","line":2,"column":8,"nodeType":"588","messageId":"589","endLine":2,"endColumn":12},{"ruleId":"586","severity":1,"message":"598","line":6,"column":32,"nodeType":"588","messageId":"589","endLine":6,"endColumn":39},{"ruleId":"586","severity":1,"message":"607","line":2,"column":8,"nodeType":"588","messageId":"589","endLine":2,"endColumn":12},{"ruleId":"586","severity":1,"message":"598","line":6,"column":32,"nodeType":"588","messageId":"589","endLine":6,"endColumn":39},{"ruleId":"586","severity":1,"message":"749","line":52,"column":7,"nodeType":"588","messageId":"589","endLine":52,"endColumn":17},{"ruleId":"586","severity":1,"message":"750","line":56,"column":7,"nodeType":"588","messageId":"589","endLine":56,"endColumn":15},{"ruleId":"586","severity":1,"message":"631","line":7,"column":3,"nodeType":"588","messageId":"589","endLine":7,"endColumn":11},{"ruleId":"586","severity":1,"message":"632","line":11,"column":3,"nodeType":"588","messageId":"589","endLine":11,"endColumn":19},{"ruleId":"586","severity":1,"message":"634","line":18,"column":10,"nodeType":"588","messageId":"589","endLine":18,"endColumn":24},{"ruleId":"586","severity":1,"message":"610","line":22,"column":8,"nodeType":"588","messageId":"589","endLine":22,"endColumn":17},{"ruleId":"586","severity":1,"message":"641","line":48,"column":8,"nodeType":"588","messageId":"589","endLine":48,"endColumn":19},{"ruleId":"586","severity":1,"message":"649","line":377,"column":10,"nodeType":"588","messageId":"589","endLine":377,"endColumn":26},{"ruleId":"586","severity":1,"message":"657","line":418,"column":10,"nodeType":"588","messageId":"589","endLine":418,"endColumn":29},{"ruleId":"586","severity":1,"message":"681","line":420,"column":9,"nodeType":"588","messageId":"589","endLine":420,"endColumn":35},{"ruleId":"586","severity":1,"message":"682","line":430,"column":9,"nodeType":"588","messageId":"589","endLine":430,"endColumn":32},{"ruleId":"590","severity":1,"message":"751","line":458,"column":6,"nodeType":"592","endLine":458,"endColumn":20,"suggestions":"752"},{"ruleId":"590","severity":1,"message":"668","line":747,"column":6,"nodeType":"592","endLine":747,"endColumn":44,"suggestions":"753"},{"ruleId":"590","severity":1,"message":"679","line":855,"column":6,"nodeType":"592","endLine":855,"endColumn":33,"suggestions":"754"},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"704","line":36,"column":12,"nodeType":"588","messageId":"589","endLine":36,"endColumn":17},{"ruleId":"590","severity":1,"message":"755","line":77,"column":8,"nodeType":"592","endLine":77,"endColumn":10,"suggestions":"756"},{"ruleId":"586","severity":1,"message":"612","line":14,"column":31,"nodeType":"588","messageId":"589","endLine":14,"endColumn":60},{"ruleId":"586","severity":1,"message":"704","line":26,"column":10,"nodeType":"588","messageId":"589","endLine":26,"endColumn":15},{"ruleId":"590","severity":1,"message":"621","line":58,"column":9,"nodeType":"592","endLine":58,"endColumn":18,"suggestions":"757"},{"ruleId":"590","severity":1,"message":"621","line":72,"column":7,"nodeType":"592","endLine":72,"endColumn":9,"suggestions":"758"},{"ruleId":"586","severity":1,"message":"694","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":34},{"ruleId":"586","severity":1,"message":"631","line":10,"column":3,"nodeType":"588","messageId":"589","endLine":10,"endColumn":11},{"ruleId":"586","severity":1,"message":"632","line":14,"column":3,"nodeType":"588","messageId":"589","endLine":14,"endColumn":19},{"ruleId":"586","severity":1,"message":"728","line":18,"column":3,"nodeType":"588","messageId":"589","endLine":18,"endColumn":13},{"ruleId":"586","severity":1,"message":"607","line":19,"column":3,"nodeType":"588","messageId":"589","endLine":19,"endColumn":7},{"ruleId":"586","severity":1,"message":"759","line":21,"column":3,"nodeType":"588","messageId":"589","endLine":21,"endColumn":11},{"ruleId":"586","severity":1,"message":"760","line":22,"column":3,"nodeType":"588","messageId":"589","endLine":22,"endColumn":9},{"ruleId":"586","severity":1,"message":"615","line":29,"column":8,"nodeType":"588","messageId":"589","endLine":29,"endColumn":22},{"ruleId":"586","severity":1,"message":"697","line":38,"column":8,"nodeType":"588","messageId":"589","endLine":38,"endColumn":13},{"ruleId":"586","severity":1,"message":"698","line":44,"column":8,"nodeType":"588","messageId":"589","endLine":44,"endColumn":13},{"ruleId":"586","severity":1,"message":"699","line":45,"column":8,"nodeType":"588","messageId":"589","endLine":45,"endColumn":18},{"ruleId":"586","severity":1,"message":"761","line":46,"column":8,"nodeType":"588","messageId":"589","endLine":46,"endColumn":19},{"ruleId":"586","severity":1,"message":"704","line":268,"column":10,"nodeType":"588","messageId":"589","endLine":268,"endColumn":15},{"ruleId":"586","severity":1,"message":"617","line":268,"column":17,"nodeType":"588","messageId":"589","endLine":268,"endColumn":25},{"ruleId":"586","severity":1,"message":"762","line":274,"column":10,"nodeType":"588","messageId":"589","endLine":274,"endColumn":19},{"ruleId":"590","severity":1,"message":"763","line":317,"column":6,"nodeType":"592","endLine":317,"endColumn":26,"suggestions":"764"},{"ruleId":"586","severity":1,"message":"765","line":335,"column":9,"nodeType":"588","messageId":"589","endLine":335,"endColumn":20},{"ruleId":"586","severity":1,"message":"766","line":361,"column":9,"nodeType":"588","messageId":"589","endLine":361,"endColumn":17},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"590","severity":1,"message":"591","line":157,"column":8,"nodeType":"592","endLine":157,"endColumn":20,"suggestions":"767"},{"ruleId":"586","severity":1,"message":"607","line":2,"column":8,"nodeType":"588","messageId":"589","endLine":2,"endColumn":12},{"ruleId":"586","severity":1,"message":"598","line":6,"column":32,"nodeType":"588","messageId":"589","endLine":6,"endColumn":39},{"ruleId":"586","severity":1,"message":"605","line":4,"column":28,"nodeType":"588","messageId":"589","endLine":4,"endColumn":44},{"ruleId":"586","severity":1,"message":"606","line":4,"column":128,"nodeType":"588","messageId":"589","endLine":4,"endColumn":132},{"ruleId":"586","severity":1,"message":"608","line":4,"column":205,"nodeType":"588","messageId":"589","endLine":4,"endColumn":212},{"ruleId":"586","severity":1,"message":"609","line":7,"column":8,"nodeType":"588","messageId":"589","endLine":7,"endColumn":17},{"ruleId":"586","severity":1,"message":"611","line":10,"column":10,"nodeType":"588","messageId":"589","endLine":10,"endColumn":22},{"ruleId":"586","severity":1,"message":"612","line":11,"column":31,"nodeType":"588","messageId":"589","endLine":11,"endColumn":60},{"ruleId":"586","severity":1,"message":"613","line":35,"column":3,"nodeType":"588","messageId":"589","endLine":35,"endColumn":21},{"ruleId":"586","severity":1,"message":"617","line":635,"column":17,"nodeType":"588","messageId":"589","endLine":635,"endColumn":25},{"ruleId":"586","severity":1,"message":"618","line":639,"column":10,"nodeType":"588","messageId":"589","endLine":639,"endColumn":21},{"ruleId":"586","severity":1,"message":"619","line":654,"column":9,"nodeType":"588","messageId":"589","endLine":654,"endColumn":20},{"ruleId":"586","severity":1,"message":"620","line":695,"column":11,"nodeType":"588","messageId":"589","endLine":695,"endColumn":25},{"ruleId":"590","severity":1,"message":"621","line":729,"column":9,"nodeType":"592","endLine":729,"endColumn":21,"suggestions":"768"},{"ruleId":"590","severity":1,"message":"623","line":753,"column":7,"nodeType":"592","endLine":753,"endColumn":15,"suggestions":"769"},{"ruleId":"590","severity":1,"message":"625","line":760,"column":10,"nodeType":"592","endLine":760,"endColumn":42,"suggestions":"770"},{"ruleId":"586","severity":1,"message":"587","line":1,"column":35,"nodeType":"588","messageId":"589","endLine":1,"endColumn":43},{"ruleId":"586","severity":1,"message":"771","line":2,"column":20,"nodeType":"588","messageId":"589","endLine":2,"endColumn":29},{"ruleId":"586","severity":1,"message":"607","line":5,"column":61,"nodeType":"588","messageId":"589","endLine":5,"endColumn":65},{"ruleId":"586","severity":1,"message":"772","line":17,"column":8,"nodeType":"588","messageId":"589","endLine":17,"endColumn":21},{"ruleId":"586","severity":1,"message":"637","line":19,"column":8,"nodeType":"588","messageId":"589","endLine":19,"endColumn":25},{"ruleId":"586","severity":1,"message":"773","line":40,"column":31,"nodeType":"588","messageId":"589","endLine":40,"endColumn":57},{"ruleId":"586","severity":1,"message":"617","line":342,"column":17,"nodeType":"588","messageId":"589","endLine":342,"endColumn":25},{"ruleId":"586","severity":1,"message":"618","line":346,"column":10,"nodeType":"588","messageId":"589","endLine":346,"endColumn":21},{"ruleId":"590","severity":1,"message":"774","line":442,"column":6,"nodeType":"592","endLine":442,"endColumn":38,"suggestions":"775"},{"ruleId":"590","severity":1,"message":"776","line":539,"column":9,"nodeType":"592","endLine":539,"endColumn":31,"suggestions":"777"},{"ruleId":"590","severity":1,"message":"623","line":562,"column":7,"nodeType":"592","endLine":562,"endColumn":15,"suggestions":"778"},{"ruleId":"586","severity":1,"message":"678","line":1,"column":17,"nodeType":"588","messageId":"589","endLine":1,"endColumn":26},{"ruleId":"586","severity":1,"message":"694","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":34},{"ruleId":"586","severity":1,"message":"631","line":7,"column":5,"nodeType":"588","messageId":"589","endLine":7,"endColumn":13},{"ruleId":"586","severity":1,"message":"595","line":11,"column":5,"nodeType":"588","messageId":"589","endLine":11,"endColumn":12},{"ruleId":"586","severity":1,"message":"632","line":12,"column":5,"nodeType":"588","messageId":"589","endLine":12,"endColumn":21},{"ruleId":"586","severity":1,"message":"695","line":14,"column":5,"nodeType":"588","messageId":"589","endLine":14,"endColumn":19},{"ruleId":"586","severity":1,"message":"728","line":15,"column":5,"nodeType":"588","messageId":"589","endLine":15,"endColumn":15},{"ruleId":"586","severity":1,"message":"607","line":16,"column":5,"nodeType":"588","messageId":"589","endLine":16,"endColumn":9},{"ruleId":"586","severity":1,"message":"759","line":18,"column":5,"nodeType":"588","messageId":"589","endLine":18,"endColumn":13},{"ruleId":"586","severity":1,"message":"760","line":19,"column":5,"nodeType":"588","messageId":"589","endLine":19,"endColumn":11},{"ruleId":"586","severity":1,"message":"696","line":20,"column":5,"nodeType":"588","messageId":"589","endLine":20,"endColumn":11},{"ruleId":"586","severity":1,"message":"615","line":27,"column":8,"nodeType":"588","messageId":"589","endLine":27,"endColumn":22},{"ruleId":"586","severity":1,"message":"697","line":36,"column":8,"nodeType":"588","messageId":"589","endLine":36,"endColumn":13},{"ruleId":"586","severity":1,"message":"698","line":42,"column":8,"nodeType":"588","messageId":"589","endLine":42,"endColumn":13},{"ruleId":"586","severity":1,"message":"699","line":43,"column":8,"nodeType":"588","messageId":"589","endLine":43,"endColumn":18},{"ruleId":"586","severity":1,"message":"761","line":44,"column":8,"nodeType":"588","messageId":"589","endLine":44,"endColumn":19},{"ruleId":"586","severity":1,"message":"700","line":45,"column":8,"nodeType":"588","messageId":"589","endLine":45,"endColumn":17},{"ruleId":"586","severity":1,"message":"701","line":46,"column":10,"nodeType":"588","messageId":"589","endLine":46,"endColumn":20},{"ruleId":"586","severity":1,"message":"779","line":49,"column":8,"nodeType":"588","messageId":"589","endLine":49,"endColumn":15},{"ruleId":"586","severity":1,"message":"702","line":50,"column":10,"nodeType":"588","messageId":"589","endLine":50,"endColumn":18},{"ruleId":"586","severity":1,"message":"703","line":59,"column":5,"nodeType":"588","messageId":"589","endLine":59,"endColumn":13},{"ruleId":"586","severity":1,"message":"780","line":218,"column":7,"nodeType":"588","messageId":"589","endLine":218,"endColumn":15},{"ruleId":"586","severity":1,"message":"704","line":310,"column":12,"nodeType":"588","messageId":"589","endLine":310,"endColumn":17},{"ruleId":"590","severity":1,"message":"781","line":384,"column":8,"nodeType":"592","endLine":384,"endColumn":35,"suggestions":"782"},{"ruleId":"586","severity":1,"message":"726","line":2,"column":8,"nodeType":"588","messageId":"589","endLine":2,"endColumn":18},{"ruleId":"586","severity":1,"message":"694","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":34},{"ruleId":"586","severity":1,"message":"631","line":7,"column":3,"nodeType":"588","messageId":"589","endLine":7,"endColumn":11},{"ruleId":"586","severity":1,"message":"728","line":13,"column":3,"nodeType":"588","messageId":"589","endLine":13,"endColumn":13},{"ruleId":"586","severity":1,"message":"607","line":14,"column":3,"nodeType":"588","messageId":"589","endLine":14,"endColumn":7},{"ruleId":"586","severity":1,"message":"598","line":19,"column":3,"nodeType":"588","messageId":"589","endLine":19,"endColumn":10},{"ruleId":"586","severity":1,"message":"697","line":33,"column":8,"nodeType":"588","messageId":"589","endLine":33,"endColumn":13},{"ruleId":"586","severity":1,"message":"700","line":42,"column":8,"nodeType":"588","messageId":"589","endLine":42,"endColumn":17},{"ruleId":"586","severity":1,"message":"703","line":47,"column":5,"nodeType":"588","messageId":"589","endLine":47,"endColumn":13},{"ruleId":"586","severity":1,"message":"704","line":265,"column":10,"nodeType":"588","messageId":"589","endLine":265,"endColumn":15},{"ruleId":"586","severity":1,"message":"587","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":36},{"ruleId":"586","severity":1,"message":"686","line":160,"column":12,"nodeType":"588","messageId":"589","endLine":160,"endColumn":19},{"ruleId":"586","severity":1,"message":"687","line":160,"column":21,"nodeType":"588","messageId":"589","endLine":160,"endColumn":31},{"ruleId":"586","severity":1,"message":"688","line":162,"column":12,"nodeType":"588","messageId":"589","endLine":162,"endColumn":18},{"ruleId":"590","severity":1,"message":"783","line":237,"column":8,"nodeType":"592","endLine":237,"endColumn":52,"suggestions":"784"},{"ruleId":"586","severity":1,"message":"678","line":1,"column":17,"nodeType":"588","messageId":"589","endLine":1,"endColumn":26},{"ruleId":"586","severity":1,"message":"694","line":1,"column":28,"nodeType":"588","messageId":"589","endLine":1,"endColumn":34},{"ruleId":"586","severity":1,"message":"631","line":7,"column":3,"nodeType":"588","messageId":"589","endLine":7,"endColumn":11},{"ruleId":"586","severity":1,"message":"632","line":10,"column":3,"nodeType":"588","messageId":"589","endLine":10,"endColumn":19},{"ruleId":"586","severity":1,"message":"695","line":12,"column":3,"nodeType":"588","messageId":"589","endLine":12,"endColumn":17},{"ruleId":"586","severity":1,"message":"728","line":13,"column":3,"nodeType":"588","messageId":"589","endLine":13,"endColumn":13},{"ruleId":"586","severity":1,"message":"607","line":14,"column":3,"nodeType":"588","messageId":"589","endLine":14,"endColumn":7},{"ruleId":"586","severity":1,"message":"759","line":16,"column":3,"nodeType":"588","messageId":"589","endLine":16,"endColumn":11},{"ruleId":"586","severity":1,"message":"760","line":17,"column":3,"nodeType":"588","messageId":"589","endLine":17,"endColumn":9},{"ruleId":"586","severity":1,"message":"696","line":18,"column":3,"nodeType":"588","messageId":"589","endLine":18,"endColumn":9},{"ruleId":"586","severity":1,"message":"598","line":20,"column":3,"nodeType":"588","messageId":"589","endLine":20,"endColumn":10},{"ruleId":"586","severity":1,"message":"615","line":25,"column":8,"nodeType":"588","messageId":"589","endLine":25,"endColumn":22},{"ruleId":"586","severity":1,"message":"697","line":34,"column":8,"nodeType":"588","messageId":"589","endLine":34,"endColumn":13},{"ruleId":"586","severity":1,"message":"698","line":40,"column":8,"nodeType":"588","messageId":"589","endLine":40,"endColumn":13},{"ruleId":"586","severity":1,"message":"699","line":41,"column":8,"nodeType":"588","messageId":"589","endLine":41,"endColumn":18},{"ruleId":"586","severity":1,"message":"761","line":42,"column":8,"nodeType":"588","messageId":"589","endLine":42,"endColumn":19},{"ruleId":"586","severity":1,"message":"700","line":43,"column":8,"nodeType":"588","messageId":"589","endLine":43,"endColumn":17},{"ruleId":"586","severity":1,"message":"701","line":44,"column":10,"nodeType":"588","messageId":"589","endLine":44,"endColumn":20},{"ruleId":"586","severity":1,"message":"702","line":48,"column":10,"nodeType":"588","messageId":"589","endLine":48,"endColumn":18},{"ruleId":"586","severity":1,"message":"703","line":52,"column":5,"nodeType":"588","messageId":"589","endLine":52,"endColumn":13},{"ruleId":"586","severity":1,"message":"780","line":210,"column":7,"nodeType":"588","messageId":"589","endLine":210,"endColumn":15},{"ruleId":"586","severity":1,"message":"704","line":302,"column":10,"nodeType":"588","messageId":"589","endLine":302,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setState' and 'state.AdminCalendarCache'. Either include them or remove the dependency array.","ArrayExpression",["785"],"'Badge' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'ListItemIcon' is defined but never used.","'Tooltip' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'border' is defined but never used.","'borderBottom' is defined but never used.","React Hook useEffect has a missing dependency: 'updateShouldRefundsCount'. Either include it or remove the dependency array.",["786"],"'CircularProgress' is defined but never used.","'Icon' is defined but never used.","'Link' is defined but never used.","'SvgIcon' is defined but never used.","'CheckIcon' is defined but never used.","'CloseIcon' is defined but never used.","'getMenuIndex' is defined but never used.","'FormatDateFromStringShortYear' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'BusinessIcon' is defined but never used.","'CreditCardIcon' is defined but never used.","'LocalAtmIcon' is defined but never used.","'setState' is assigned a value but never used.","'selectedRow' is assigned a value but never used.","'lastPromise' is assigned a value but never used.","'currentPromise' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["787"],"React Hook useEffect has a missing dependency: 'data.cachedBookings'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'data.cachedBookings'.",["788"],"React Hook useEffect has missing dependencies: 'loadData' and 'topCount'. Either include them or remove the dependency array.",["789"],"no-native-reassign",["790"],"no-negated-in-lhs",["791"],"'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'PDFService' is defined but never used.","'calculatePrice' is defined but never used.","'PrintIcon' is defined but never used.","'changeBackToBookingMade' is assigned a value but never used.","'DialogContentText' is defined but never used.","'PayDialog' is defined but never used.","'UndoIcon' is defined but never used.","'SendIcon' is defined but never used.","'HistoryIcon' is defined but never used.","'FileCopyOutlinedIcon' is defined but never used.","'CalendarColors' is defined but never used.","'InvoiceDialog' is defined but never used.","'copied' is assigned a value but never used.","'setCopied' is assigned a value but never used.","'emailSent' is assigned a value but never used.","'emailSentInvoice' is assigned a value but never used.","'openResendDialog' is assigned a value but never used.","'setOpenResendDialog' is assigned a value but never used.","'openPayDialog' is assigned a value but never used.","'openRefundDialog' is assigned a value but never used.","'openInvoiceDialog' is assigned a value but never used.","'selectedBooking' is assigned a value but never used.","'recordChanged' is assigned a value but never used.","'openUndoPayDialog' is assigned a value but never used.","'openTimeStampDialog' is assigned a value but never used.","'setOpenTimeStampDialog' is assigned a value but never used.","'invoiceLoaded' is assigned a value but never used.","'setInvoiceLoaded' is assigned a value but never used.","'serviceChanged' is assigned a value but never used.","'notesChanged' is assigned a value but never used.","'getStatusLabel' is assigned a value but never used.","'handleEditModeChanged' is assigned a value but never used.","'changeToPatientAttended' is assigned a value but never used.","'Pay' is assigned a value but never used.","'OpenInvoiceDialog' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.booking' and 'setState'. Either include them or remove the dependency array.",["792"],"'undoPaymentClicked' is assigned a value but never used.","'refundPaymentClicked' is assigned a value but never used.","'downloadRegForm' is assigned a value but never used.","'downloadInvoice' is assigned a value but never used.","'sendRegForm' is assigned a value but never used.","'sendInvoiceEmail' is assigned a value but never used.",["790"],["791"],"'useEffect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'fetchInvoice'. Either include it or remove the dependency array.",["793"],"'handleCloseTimeStampDialog' is assigned a value but never used.","'handleCloseResendDialog' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'booking', 'bookingDate', 'bookingTime', 'email', 'fullname', 'notes', and 'tel'. Either include them or remove the dependency array.",["794"],["795"],"'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.","'isPast' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'openDialog', 'openDialogAddNew', 'setState', and 'state.AdminCalendarCache'. Either include them or remove the dependency array.",["796"],"React Hook useEffect has missing dependencies: 'disableDay', 'setState', and 'state.AdminCalendarCache'. Either include them or remove the dependency array.",["797"],["798"],"'useRef' is defined but never used.","'InputAdornment' is defined but never used.","'Switch' is defined but never used.","'Alert' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormLabel' is defined but never used.","'corporates' is defined but never used.","'validate' is defined but never used.","'interval' is defined but never used.","'state' is assigned a value but never used.","'EventNoteIcon' is defined but never used.","'FindByRef' is defined but never used.","'BookingTable' is defined but never used.","'DashboardPreview' is defined but never used.","'UnmatchedRecords' is defined but never used.","'PCRCalendarView' is defined but never used.","'GynaeBookingTable' is defined but never used.","'GynaeDashboardPreview' is defined but never used.","'GynaeFindByRef' is defined but never used.","'GynaeCalendarView' is defined but never used.","'GPBookingTable' is defined but never used.","'GPDashboardPreview' is defined but never used.","'GPFindByRef' is defined but never used.","'GPCalendarView' is defined but never used.","'STDBookingTable' is defined but never used.","'STDDashboardPreview' is defined but never used.","'STDFindByRef' is defined but never used.","'STDCalendarView' is defined but never used.","'OVBookingTable' is defined but never used.","'OVCalendarView' is defined but never used.","'PatientsTable' is defined but never used.","'axiosRetry' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'width' is defined but never used.","React Hook useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.",["799"],"React Hook useEffect has missing dependencies: 'setState' and 'state.ref'. Either include them or remove the dependency array.",["800"],["801"],["802"],["803"],"'MomentUtils' is defined but never used.","'moment' is defined but never used.","'dateFormatter' is assigned a value but never used.",["804"],["805"],["806"],["807"],["808"],["809"],"'Typography' is defined but never used.","'TextField' is defined but never used.","'withStyles' is defined but never used.","'isThursday' is assigned a value but never used.","'isFriday' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'booking', 'bookingDate', 'bookingTime', 'email', 'fullname', 'notes', 'service', and 'tel'. Either include them or remove the dependency array.",["810"],["811"],["812"],"React Hook useEffect has missing dependencies: 'removeFilter' and 'setState'. Either include them or remove the dependency array.",["813"],["814"],["815"],"'MenuItem' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'codeError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.invoice'. Either include it or remove the dependency array.",["816"],"'codeChanged' is assigned a value but never used.","'codeLeft' is assigned a value but never used.",["817"],["818"],["819"],["820"],"'ROW_CLICK' is defined but never used.","'DialogActions' is defined but never used.","'RevertFormatDateFromString' is defined but never used.","React Hook useEffect has a missing dependency: 'smartLinkId'. Either include it or remove the dependency array.",["821"],"React Hook useEffect has missing dependencies: 'data.bookings' and 'data.cachedBookings'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setData' needs the current value of 'data.bookings'.",["822"],["823"],"'AddIcon' is defined but never used.","'Packages' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.clinic', 'props.date', and 'props.time'. Either include them or remove the dependency array. If 'setDate' needs the current value of 'props.date', you can also switch to useReducer instead of useState and read 'props.date' in the reducer.",["824"],"React Hook useEffect has missing dependencies: 'openDialog', 'setState', and 'state.AdminCalendarCache'. Either include them or remove the dependency array.",["825"],{"desc":"826","fix":"827"},{"desc":"828","fix":"829"},{"desc":"830","fix":"831"},{"desc":"832","fix":"833"},{"desc":"834","fix":"835"},"no-global-assign","no-unsafe-negation",{"desc":"836","fix":"837"},{"desc":"838","fix":"839"},{"desc":"840","fix":"841"},{"desc":"836","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"843","fix":"847"},{"desc":"848","fix":"849"},{"desc":"850","fix":"851"},{"desc":"830","fix":"852"},{"desc":"832","fix":"853"},{"desc":"834","fix":"854"},{"desc":"830","fix":"855"},{"desc":"832","fix":"856"},{"desc":"834","fix":"857"},{"desc":"858","fix":"859"},{"desc":"860","fix":"861"},{"desc":"845","fix":"862"},{"desc":"863","fix":"864"},{"desc":"836","fix":"865"},{"desc":"838","fix":"866"},{"desc":"867","fix":"868"},{"desc":"858","fix":"869"},{"desc":"860","fix":"870"},{"desc":"871","fix":"872"},{"desc":"826","fix":"873"},{"desc":"830","fix":"874"},{"desc":"832","fix":"875"},{"desc":"834","fix":"876"},{"desc":"877","fix":"878"},{"desc":"879","fix":"880"},{"desc":"832","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},"Update the dependencies array to be: [date, setState, state.AdminCalendarCache, time]",{"range":"886","text":"887"},"Update the dependencies array to be: [state.currentMenuIndex, state.bookingDialogDataChanged, updateShouldRefundsCount]",{"range":"888","text":"889"},"Update the dependencies array to be: [loadData, props.date]",{"range":"890","text":"891"},"Update the dependencies array to be: [data.cachedBookings, filter]",{"range":"892","text":"893"},"Update the dependencies array to be: [loadData, state.bookingDialogDataChanged, topCount]",{"range":"894","text":"895"},"Update the dependencies array to be: [props.booking, refreshData, setState, state.bookingPayChanged]",{"range":"896","text":"897"},"Update the dependencies array to be: [fetchInvoice, props.booking, props.open]",{"range":"898","text":"899"},"Update the dependencies array to be: [booking, bookingDate, bookingTime, email, fieldChanged, fullname, notes, tel]",{"range":"900","text":"901"},{"range":"902","text":"897"},"Update the dependencies array to be: [date, time, state.bookingDialogDataChanged, openDialog, openDialogAddNew, state.AdminCalendarCache, setState]",{"range":"903","text":"904"},"Update the dependencies array to be: [dateStr, disableDay, setState, state.AdminCalendarCache]",{"range":"905","text":"906"},{"range":"907","text":"904"},"Update the dependencies array to be: [setState]",{"range":"908","text":"909"},"Update the dependencies array to be: [setState, state.RefreshPersonInfo, state.ref]",{"range":"910","text":"911"},{"range":"912","text":"891"},{"range":"913","text":"893"},{"range":"914","text":"895"},{"range":"915","text":"891"},{"range":"916","text":"893"},{"range":"917","text":"895"},"Update the dependencies array to be: [loadData, refresh]",{"range":"918","text":"919"},"Update the dependencies array to be: [loadData]",{"range":"920","text":"921"},{"range":"922","text":"906"},"Update the dependencies array to be: [booking, bookingDate, bookingTime, email, fieldChanged, fullname, notes, service, tel]",{"range":"923","text":"924"},{"range":"925","text":"897"},{"range":"926","text":"899"},"Update the dependencies array to be: [removeFilter, setState]",{"range":"927","text":"928"},{"range":"929","text":"919"},{"range":"930","text":"921"},"Update the dependencies array to be: [props.defaultCodes, props.invoice]",{"range":"931","text":"932"},{"range":"933","text":"887"},{"range":"934","text":"891"},{"range":"935","text":"893"},{"range":"936","text":"895"},"Update the dependencies array to be: [smartLinkId, state.bookingDialogDataChanged]",{"range":"937","text":"938"},"Update the dependencies array to be: [data.bookings, data.cachedBookings, refresh, selectedTab]",{"range":"939","text":"940"},{"range":"941","text":"893"},"Update the dependencies array to be: [props.open, props.booking, props.date, props.time, props.clinic]",{"range":"942","text":"943"},"Update the dependencies array to be: [date, time, state.bookingDialogDataChanged, openDialog, state.AdminCalendarCache, setState]",{"range":"944","text":"945"},[3874,3886],"[date, setState, state.AdminCalendarCache, time]",[2136,2192],"[state.currentMenuIndex, state.bookingDialogDataChanged, updateShouldRefundsCount]",[16053,16065],"[loadData, props.date]",[16608,16616],"[data.cachedBookings, filter]",[16688,16720],"[loadData, state.bookingDialogDataChanged, topCount]",[16912,16950],"[props.booking, refreshData, setState, state.bookingPayChanged]",[9677,9704],"[fetchInvoice, props.booking, props.open]",[10767,10781],"[booking, bookingDate, bookingTime, email, fieldChanged, fullname, notes, tel]",[17967,18005],[6681,6725],"[date, time, state.bookingDialogDataChanged, openDialog, openDialogAddNew, state.AdminCalendarCache, setState]",[4685,4694],"[dateStr, disableDay, setState, state.AdminCalendarCache]",[7230,7274],[3015,3017],"[setState]",[3243,3268],"[setState, state.RefreshPersonInfo, state.ref]",[19349,19361],[20002,20010],[20082,20114],[24034,24046],[24776,24784],[24856,24888],[1790,1799],"[loadData, refresh]",[2020,2022],"[loadData]",[4630,4639],[9970,9984],"[booking, bookingDate, bookingTime, email, fieldChanged, fullname, notes, service, tel]",[17089,17127],[19789,19816],[2423,2425],"[removeFilter, setState]",[1790,1799],[2020,2022],[6898,6918],"[props.defaultCodes, props.invoice]",[3874,3886],[19349,19361],[20002,20010],[20082,20114],[11588,11620],"[smartLinkId, state.bookingDialogDataChanged]",[14081,14103],"[data.bookings, data.cachedBookings, refresh, selectedTab]",[14739,14747],[9897,9924],"[props.open, props.booking, props.date, props.time, props.clinic]",[6590,6634],"[date, time, state.bookingDialogDataChanged, openDialog, state.AdminCalendarCache, setState]"]